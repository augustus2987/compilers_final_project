
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'


_lr_signature = 'nonassocPRINTVARNAMEleftPLUSANDORCOLONNOTEQEQEQrightUNARYSUBNOTCOMMAAND ASSIGN COLON COMMA ELSE EQEQ FALSE IF INPUT INT IS LCBRACK LPAREN LSBRACK NOT NOTEQ OR PLUS PRINT RCBRACK RPAREN RSBRACK TRUE UNARYSUB VARNAMEstatement : PRINT expressionstatement : VARNAME ASSIGN expressionstatement : expressionexpression : VARNAMEexpression : INTexpression : UNARYSUB expressionexpression : expression PLUS expressionexpression : LPAREN expression RPAREN expression : INPUT LPAREN RPARENkey_datum : expression COLON expressionsubscription : expression LSBRACK expression RSBRACKexpression : TRUEexpression : FALSEexpression : NOT expressionexpression : expression AND expressionexpression : expression OR expressionexpression : expression EQEQ expressionexpression : expression NOTEQ expressionexpression : expression IF expression ELSE expressionexpression : LSBRACK expr_list RSBRACKexpression : LCBRACK key_datum_list RCBRACKexpression : subscriptionexpression : expression IS expressionexpr_list : expressionexpr_list : expression COMMA expr_listkey_datum_list : key_datumkey_datum_list : key_datum COMMA key_datum_listtarget : subscriptionstatement : target ASSIGN expression'
    
_lr_action_items = {'EQEQ':([1,5,7,11,13,15,17,19,20,21,22,25,26,29,38,39,42,44,45,46,47,48,49,50,51,52,53,54,57,58,60,],[-4,-12,-22,-13,-5,32,-4,-22,32,-6,32,32,32,-14,32,-20,-21,-8,-9,32,-15,32,-17,32,-18,-7,-16,32,32,-11,32,]),'VARNAME':([0,2,3,4,8,9,14,16,28,30,31,32,33,34,35,36,37,40,41,43,59,],[1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LSBRACK':([0,1,2,3,4,5,7,8,9,11,13,14,15,16,17,19,20,21,22,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,59,60,],[2,-4,2,2,2,-12,-22,2,2,-13,-5,2,31,2,-4,-22,31,-6,31,31,31,2,-14,2,2,2,2,2,2,2,2,31,-20,2,2,-21,2,-8,-9,31,-15,31,-17,31,-18,-7,-16,31,31,-11,2,31,]),'UNARYSUB':([0,2,3,4,8,9,14,16,28,30,31,32,33,34,35,36,37,40,41,43,59,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'PRINT':([0,],[4,]),'TRUE':([0,2,3,4,8,9,14,16,28,30,31,32,33,34,35,36,37,40,41,43,59,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'RPAREN':([5,11,13,17,19,21,26,27,29,39,42,44,45,47,49,50,51,52,53,58,60,],[-12,-13,-5,-4,-22,-6,44,45,-14,-20,-21,-8,-9,-15,-17,-23,-18,-7,-16,-11,-19,]),'RSBRACK':([5,11,13,17,18,19,20,21,29,39,42,44,45,47,48,49,50,51,52,53,55,58,60,],[-12,-13,-5,-4,39,-22,-24,-6,-14,-20,-21,-8,-9,-15,58,-17,-23,-18,-7,-16,-25,-11,-19,]),'NOTEQ':([1,5,7,11,13,15,17,19,20,21,22,25,26,29,38,39,42,44,45,46,47,48,49,50,51,52,53,54,57,58,60,],[-4,-12,-22,-13,-5,34,-4,-22,34,-6,34,34,34,-14,34,-20,-21,-8,-9,34,-15,34,-17,34,-18,-7,-16,34,34,-11,34,]),'PLUS':([1,5,7,11,13,15,17,19,20,21,22,25,26,29,38,39,42,44,45,46,47,48,49,50,51,52,53,54,57,58,60,],[-4,-12,-22,-13,-5,35,-4,-22,35,-6,35,35,35,-14,35,-20,-21,-8,-9,35,-15,35,-17,35,-18,-7,-16,35,35,-11,35,]),'COLON':([5,11,13,17,19,21,25,29,39,42,44,45,47,49,50,51,52,53,58,60,],[-12,-13,-5,-4,-22,-6,43,-14,-20,-21,-8,-9,-15,-17,-23,-18,-7,-16,-11,-19,]),'ASSIGN':([1,7,12,58,],[16,-28,28,-11,]),'$end':([1,5,6,7,11,13,15,17,19,21,22,29,38,39,42,44,45,46,47,49,50,51,52,53,58,60,],[-4,-12,0,-22,-13,-5,-3,-4,-22,-6,-1,-14,-2,-20,-21,-8,-9,-29,-15,-17,-23,-18,-7,-16,-11,-19,]),'LCBRACK':([0,2,3,4,8,9,14,16,28,30,31,32,33,34,35,36,37,40,41,43,59,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'IS':([1,5,7,11,13,15,17,19,20,21,22,25,26,29,38,39,42,44,45,46,47,48,49,50,51,52,53,54,57,58,60,],[-4,-12,-22,-13,-5,33,-4,-22,33,-6,33,33,33,-14,33,-20,-21,-8,-9,33,-15,33,-17,33,-18,-7,-16,33,33,-11,33,]),'ELSE':([5,11,13,17,19,21,29,39,42,44,45,47,49,50,51,52,53,54,58,60,],[-12,-13,-5,-4,-22,-6,-14,-20,-21,-8,-9,-15,-17,-23,-18,-7,-16,59,-11,-19,]),'LPAREN':([0,2,3,4,8,9,10,14,16,28,30,31,32,33,34,35,36,37,40,41,43,59,],[9,9,9,9,9,9,27,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'INPUT':([0,2,3,4,8,9,14,16,28,30,31,32,33,34,35,36,37,40,41,43,59,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'IF':([1,5,7,11,13,15,17,19,20,21,22,25,26,29,38,39,42,44,45,46,47,48,49,50,51,52,53,54,57,58,60,],[-4,-12,-22,-13,-5,37,-4,-22,37,-6,37,37,37,-14,37,-20,-21,-8,-9,37,-15,37,-17,37,-18,-7,-16,37,37,-11,37,]),'AND':([1,5,7,11,13,15,17,19,20,21,22,25,26,29,38,39,42,44,45,46,47,48,49,50,51,52,53,54,57,58,60,],[-4,-12,-22,-13,-5,30,-4,-22,30,-6,30,30,30,-14,30,-20,-21,-8,-9,30,-15,30,-17,30,-18,-7,-16,30,30,-11,30,]),'FALSE':([0,2,3,4,8,9,14,16,28,30,31,32,33,34,35,36,37,40,41,43,59,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'INT':([0,2,3,4,8,9,14,16,28,30,31,32,33,34,35,36,37,40,41,43,59,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'RCBRACK':([5,11,13,17,19,21,23,24,29,39,42,44,45,47,49,50,51,52,53,56,57,58,60,],[-12,-13,-5,-4,-22,-6,-26,42,-14,-20,-21,-8,-9,-15,-17,-23,-18,-7,-16,-27,-10,-11,-19,]),'NOT':([0,2,3,4,8,9,14,16,28,30,31,32,33,34,35,36,37,40,41,43,59,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'COMMA':([5,11,13,17,19,20,21,23,29,39,42,44,45,47,49,50,51,52,53,57,58,60,],[-12,-13,-5,-4,-22,40,-6,41,-14,-20,-21,-8,-9,-15,-17,-23,-18,-7,-16,-10,-11,-19,]),'OR':([1,5,7,11,13,15,17,19,20,21,22,25,26,29,38,39,42,44,45,46,47,48,49,50,51,52,53,54,57,58,60,],[-4,-12,-22,-13,-5,36,-4,-22,36,-6,36,36,36,-14,36,-20,-21,-8,-9,36,-15,36,-17,36,-18,-7,-16,36,36,-11,36,]),}


_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'key_datum':([8,41,],[23,23,]),'key_datum_list':([8,41,],[24,56,]),'target':([0,],[12,]),'expr_list':([2,40,],[18,55,]),'statement':([0,],[6,]),'expression':([0,2,3,4,8,9,14,16,28,30,31,32,33,34,35,36,37,40,41,43,59,],[15,20,21,22,25,26,29,38,46,47,48,49,50,51,52,53,54,20,25,57,60,]),'subscription':([0,2,3,4,8,9,14,16,28,30,31,32,33,34,35,36,37,40,41,43,59,],[7,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),}


_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),

  ('statement -> PRINT expression','statement',2,'p_print_statement','parse.py',167),
  ('statement -> VARNAME ASSIGN expression','statement',3,'p_assign_statement','parse.py',171),
  ('statement -> expression','statement',1,'p_discard_statement','parse.py',175),
  ('expression -> VARNAME','expression',1,'p_varname_expression','parse.py',179),
  ('expression -> INT','expression',1,'p_int_expression','parse.py',183),
  ('expression -> UNARYSUB expression','expression',2,'p_unarysub_expression','parse.py',187),
  ('expression -> expression PLUS expression','expression',3,'p_plus_expression','parse.py',191),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_group_expression','parse.py',195),
  ('expression -> INPUT LPAREN RPAREN','expression',3,'p_callfunc_expression','parse.py',199),
  ('key_datum -> expression COLON expression','key_datum',3,'p_key_datum','parse.py',208),
  ('subscription -> expression LSBRACK expression RSBRACK','subscription',4,'p_subscription','parse.py',212),
  ('expression -> TRUE','expression',1,'p_true_expression','parse.py',216),
  ('expression -> FALSE','expression',1,'p_false_expression','parse.py',220),
  ('expression -> NOT expression','expression',2,'p_not_expression','parse.py',224),
  ('expression -> expression AND expression','expression',3,'p_and_expression','parse.py',228),
  ('expression -> expression OR expression','expression',3,'p_or_expression','parse.py',232),
  ('expression -> expression EQEQ expression','expression',3,'p_eqeq_expression','parse.py',236),
  ('expression -> expression NOTEQ expression','expression',3,'p_noteq_expression','parse.py',240),
  ('expression -> expression IF expression ELSE expression','expression',5,'p_conditional_expression','parse.py',244),
  ('expression -> LSBRACK expr_list RSBRACK','expression',3,'p_list_expression','parse.py',248),
  ('expression -> LCBRACK key_datum_list RCBRACK','expression',3,'p_dict_expression','parse.py',252),
  ('expression -> subscription','expression',1,'p_subscription_expression','parse.py',256),
  ('expression -> expression IS expression','expression',3,'p_is_expression','parse.py',260),
  ('expr_list -> expression','expr_list',1,'p_expr_list','parse.py',264),
  ('expr_list -> expression COMMA expr_list','expr_list',3,'p_append_to_list','parse.py',268),
  ('key_datum_list -> key_datum','key_datum_list',1,'p_keydatum_list','parse.py',276),
  ('key_datum_list -> key_datum COMMA key_datum_list','key_datum_list',3,'p_keydatum_list_appendto_list','parse.py',280),
  ('target -> subscription','target',1,'p_target_subscription','parse.py',292),
  ('statement -> target ASSIGN expression','statement',3,'p_target_statement','parse.py',297),


]
