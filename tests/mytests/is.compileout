compiler:: base tree:
compiler::	Assign([AssName('x', 'OP_ASSIGN')], Const(1))
compiler::	Assign([AssName('y', 'OP_ASSIGN')], Name('x'))
compiler::	Printnl([Compare(Name('x'), [('is', Name('y'))])], None)
explicate:: Explicated Tree:
Module(None, Stmt([Assign([AssName('x', 'OP_ASSIGN')], Const(1)), Assign([AssName('y', 'OP_ASSIGN')], Name('x')), Let(Name('expl_3'), Let(Name('expl_1'), Name('x'), Let(Name('expl_2'), Name('y'), IfExp(InjectFrom(bool, And([Or([Compare(Const(0), [('==', GetTag(Name('expl_1')))]), Compare(Const(1), [('==', GetTag(Name('expl_1')))])]), Or([Compare(Const(0), [('==', GetTag(Name('expl_2')))]), Compare(Const(1), [('==', GetTag(Name('expl_2')))])])])), Assign([Name('expl_0')], IfExp(InjectFrom(bool, Compare(GetTag(Name('expl_1')), [('==', GetTag(Name('expl_2')))])), InjectFrom(bool, Compare(IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_1')))])), ProjectTo(int, Name('expl_1')), ProjectTo(bool, Name('expl_1'))), [('==', IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_2')))])), ProjectTo(int, Name('expl_2')), ProjectTo(bool, Name('expl_2'))))])), Bool(False))), IfExp(InjectFrom(bool, And([Compare(Const(3), [('==', GetTag(Name('expl_1')))]), Compare(Const(3), [('==', GetTag(Name('expl_2')))])])), Assign([Name('expl_0')], InjectFrom(bool, Compare(Name('x'), [('==', Name('y'))]))), CallFunc(Name('call_error'), [], None, None))))), IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_3')))])), Printnl([ProjectTo(int, Name('expl_3'))], None), IfExp(InjectFrom(bool, Compare(Const(1), [('==', GetTag(Name('expl_3')))])), PrintBool(Name('expl_3')), IfExp(InjectFrom(bool, Compare(Const(3), [('==', GetTag(Name('expl_3')))])), PrintBig(Name('expl_3')), CallFunc(Name('call_error'), [], None, None)))))]))
Flatten:: Flattened AST tree:
Flatten:: 	Assign([AssName('user_x', 'OP_ASSIGN')], Const(1))
Flatten:: 	Assign([AssName('user_y', 'OP_ASSIGN')], Name('user_x'))
Flatten:: 	Let(Name('expl_1'), Name('user_x'), Stmt([Let(Name('expl_2'), Name('user_y'), Stmt([Assign([AssName('var_51', 'OP-ASSIGN')], GetTag(Name('expl_1'))), Assign([AssName('var_50', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_51'))])), Assign([AssName('var_54', 'OP-ASSIGN')], GetTag(Name('expl_1'))), Assign([AssName('var_53', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_54'))])), Assign([AssName('var_49', 'OP-ASSIGN')], Or([Name('var_50'), Name('var_53')])), Assign([AssName('var_59', 'OP-ASSIGN')], GetTag(Name('expl_2'))), Assign([AssName('var_58', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_59'))])), Assign([AssName('var_62', 'OP-ASSIGN')], GetTag(Name('expl_2'))), Assign([AssName('var_61', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_62'))])), Assign([AssName('var_57', 'OP-ASSIGN')], Or([Name('var_58'), Name('var_61')])), Assign([AssName('var_48', 'OP-ASSIGN')], And([Name('var_49'), Name('var_57')])), Assign([AssName('var_47', 'OP-ASSIGN')], InjectFrom(bool, Name('var_48'))), Assign([AssName('var_67', 'OP-ASSIGN')], GetTag(Name('var_47'))), Assign([AssName('var_67', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_67'))])), IfExp(Name('var_67'), Stmt([Assign([AssName('var_47', 'OP-ASSIGN')], ProjectTo(int, Name('var_47')))]), Stmt([Assign([AssName('var_47', 'OP-ASSIGN')], ProjectTo(bool, Name('var_47')))])), IfExp(Name('var_47'), Stmt([Assign([AssName('var_26', 'OP-ASSIGN')], GetTag(Name('expl_1'))), Assign([AssName('var_27', 'OP-ASSIGN')], GetTag(Name('expl_2'))), Assign([AssName('var_25', 'OP-ASSIGN')], Compare(Name('var_26'), [('==', Name('var_27'))])), Assign([AssName('var_24', 'OP-ASSIGN')], InjectFrom(bool, Name('var_25'))), Assign([AssName('var_30', 'OP-ASSIGN')], GetTag(Name('var_24'))), Assign([AssName('var_30', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_30'))])), IfExp(Name('var_30'), Stmt([Assign([AssName('var_24', 'OP-ASSIGN')], ProjectTo(int, Name('var_24')))]), Stmt([Assign([AssName('var_24', 'OP-ASSIGN')], ProjectTo(bool, Name('var_24')))])), IfExp(Name('var_24'), Stmt([Assign([AssName('var_7', 'OP-ASSIGN')], GetTag(Name('expl_1'))), Assign([AssName('var_6', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_7'))])), Assign([AssName('var_5', 'OP-ASSIGN')], InjectFrom(bool, Name('var_6'))), Assign([AssName('var_10', 'OP-ASSIGN')], GetTag(Name('var_5'))), Assign([AssName('var_10', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_10'))])), IfExp(Name('var_10'), Stmt([Assign([AssName('var_5', 'OP-ASSIGN')], ProjectTo(int, Name('var_5')))]), Stmt([Assign([AssName('var_5', 'OP-ASSIGN')], ProjectTo(bool, Name('var_5')))])), IfExp(Name('var_5'), Stmt([Assign([AssName('var_2', 'OP-ASSIGN')], ProjectTo(int, Name('expl_1'))), Assign([AssName('var_2', 'OP-ASSIGN')], Name('var_2'))]), Stmt([Assign([AssName('var_3', 'OP-ASSIGN')], ProjectTo(bool, Name('expl_1'))), Assign([AssName('var_2', 'OP-ASSIGN')], Name('var_3'))])), Assign([AssName('var_17', 'OP-ASSIGN')], GetTag(Name('expl_2'))), Assign([AssName('var_16', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_17'))])), Assign([AssName('var_15', 'OP-ASSIGN')], InjectFrom(bool, Name('var_16'))), Assign([AssName('var_20', 'OP-ASSIGN')], GetTag(Name('var_15'))), Assign([AssName('var_20', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_20'))])), IfExp(Name('var_20'), Stmt([Assign([AssName('var_15', 'OP-ASSIGN')], ProjectTo(int, Name('var_15')))]), Stmt([Assign([AssName('var_15', 'OP-ASSIGN')], ProjectTo(bool, Name('var_15')))])), IfExp(Name('var_15'), Stmt([Assign([AssName('var_12', 'OP-ASSIGN')], ProjectTo(int, Name('expl_2'))), Assign([AssName('var_12', 'OP-ASSIGN')], Name('var_12'))]), Stmt([Assign([AssName('var_13', 'OP-ASSIGN')], ProjectTo(bool, Name('expl_2'))), Assign([AssName('var_12', 'OP-ASSIGN')], Name('var_13'))])), Assign([AssName('var_1', 'OP-ASSIGN')], Compare(Name('var_2'), [('==', Name('var_12'))])), Assign([AssName('var_0', 'OP-ASSIGN')], InjectFrom(bool, Name('var_1'))), Assign([AssName('var_0', 'OP-ASSIGN')], Name('var_0'))]), Stmt([Assign([AssName('var_23', 'OP-ASSIGN')], Bool(False)), Assign([AssName('var_0', 'OP-ASSIGN')], Name('var_23'))])), Assign([Name('expl_0')], Name('var_0')), Assign([AssName('var_0', 'OP-ASSIGN')], Name('expl_0'))]), Stmt([Assign([AssName('var_38', 'OP-ASSIGN')], GetTag(Name('expl_1'))), Assign([AssName('var_37', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_38'))])), Assign([AssName('var_41', 'OP-ASSIGN')], GetTag(Name('expl_2'))), Assign([AssName('var_40', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_41'))])), Assign([AssName('var_36', 'OP-ASSIGN')], And([Name('var_37'), Name('var_40')])), Assign([AssName('var_35', 'OP-ASSIGN')], InjectFrom(bool, Name('var_36'))), Assign([AssName('var_45', 'OP-ASSIGN')], GetTag(Name('var_35'))), Assign([AssName('var_45', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_45'))])), IfExp(Name('var_45'), Stmt([Assign([AssName('var_35', 'OP-ASSIGN')], ProjectTo(int, Name('var_35')))]), Stmt([Assign([AssName('var_35', 'OP-ASSIGN')], ProjectTo(bool, Name('var_35')))])), IfExp(Name('var_35'), Stmt([Assign([AssName('var_32', 'OP-ASSIGN')], Compare(Name('user_x'), [('==', Name('user_y'))])), Assign([AssName('var_31', 'OP-ASSIGN')], InjectFrom(bool, Name('var_32'))), Assign([Name('expl_0')], Name('var_31')), Assign([AssName('var_31', 'OP-ASSIGN')], Name('expl_0')), Assign([AssName('var_0', 'OP-ASSIGN')], Name('var_31'))]), Stmt([Assign([AssName('var_34', 'OP-ASSIGN')], CallFunc(Name('call_error'), [], None, None)), Assign([AssName('var_31', 'OP-ASSIGN')], Name('var_34')), Assign([AssName('var_0', 'OP-ASSIGN')], Name('var_31'))]))]))])), Assign([AssName('var_0', 'OP-ASSIGN')], Name('expl_0'))]))
Flatten:: 	Assign([AssName('var_0', 'OP-ASSIGN')], Name('expl_0'))
Flatten:: 	Let(Name('expl_3'), Name('var_0'), Stmt([Assign([AssName('var_87', 'OP-ASSIGN')], GetTag(Name('expl_3'))), Assign([AssName('var_86', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_87'))])), Assign([AssName('var_85', 'OP-ASSIGN')], InjectFrom(bool, Name('var_86'))), Assign([AssName('var_90', 'OP-ASSIGN')], GetTag(Name('var_85'))), Assign([AssName('var_90', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_90'))])), IfExp(Name('var_90'), Stmt([Assign([AssName('var_85', 'OP-ASSIGN')], ProjectTo(int, Name('var_85')))]), Stmt([Assign([AssName('var_85', 'OP-ASSIGN')], ProjectTo(bool, Name('var_85')))])), IfExp(Name('var_85'), Stmt([Assign([AssName('var_69', 'OP-ASSIGN')], ProjectTo(int, Name('expl_3'))), Printnl([Name('var_69')], None)]), Stmt([Assign([AssName('var_80', 'OP-ASSIGN')], GetTag(Name('expl_3'))), Assign([AssName('var_79', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_80'))])), Assign([AssName('var_78', 'OP-ASSIGN')], InjectFrom(bool, Name('var_79'))), Assign([AssName('var_83', 'OP-ASSIGN')], GetTag(Name('var_78'))), Assign([AssName('var_83', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_83'))])), IfExp(Name('var_83'), Stmt([Assign([AssName('var_78', 'OP-ASSIGN')], ProjectTo(int, Name('var_78')))]), Stmt([Assign([AssName('var_78', 'OP-ASSIGN')], ProjectTo(bool, Name('var_78')))])), IfExp(Name('var_78'), Stmt([PrintBool(Name('expl_3'))]), Stmt([Assign([AssName('var_73', 'OP-ASSIGN')], GetTag(Name('expl_3'))), Assign([AssName('var_72', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_73'))])), Assign([AssName('var_71', 'OP-ASSIGN')], InjectFrom(bool, Name('var_72'))), Assign([AssName('var_76', 'OP-ASSIGN')], GetTag(Name('var_71'))), Assign([AssName('var_76', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_76'))])), IfExp(Name('var_76'), Stmt([Assign([AssName('var_71', 'OP-ASSIGN')], ProjectTo(int, Name('var_71')))]), Stmt([Assign([AssName('var_71', 'OP-ASSIGN')], ProjectTo(bool, Name('var_71')))])), IfExp(Name('var_71'), Stmt([PrintBig(Name('expl_3'))]), Stmt([Assign([AssName('var_70', 'OP-ASSIGN')], CallFunc(Name('call_error'), [], None, None)), Assign([AssName('var_70', 'OP-ASSIGN')], Name('var_70')), Assign([AssName('var_70', 'OP-ASSIGN')], Name('var_70'))]))]))]))]))
x86IR::  Intermediate representation:
x86IR::  	pushl $1
x86IR::  	call inject_int
x86IR::  	movl eax user_x
x86IR::  	movl user_x user_y
x86IR::  	movl user_x expl_1
x86IR::  	movl user_y expl_2
x86IR::  	pushl expl_1
x86IR::  	call tag
x86IR::  	movl eax var_51
x86IR::  	cmpl $0 var_51
x86IR::  	je ir_tag0_cmp
x86IR::  	movl $0 var_50
x86IR::  	jmp ir_tag0_cmpend
x86IR::  	ir_tag0_cmp:
x86IR::  	movl $1 var_50
x86IR::  	ir_tag0_cmpend:
x86IR::  	pushl expl_1
x86IR::  	call tag
x86IR::  	movl eax var_54
x86IR::  	cmpl $1 var_54
x86IR::  	je ir_tag1_cmp
x86IR::  	movl $0 var_53
x86IR::  	jmp ir_tag1_cmpend
x86IR::  	ir_tag1_cmp:
x86IR::  	movl $1 var_53
x86IR::  	ir_tag1_cmpend:
x86IR::  	movl var_50 var_49
x86IR::  	orl var_53 var_49
x86IR::  	pushl expl_2
x86IR::  	call tag
x86IR::  	movl eax var_59
x86IR::  	cmpl $0 var_59
x86IR::  	je ir_tag2_cmp
x86IR::  	movl $0 var_58
x86IR::  	jmp ir_tag2_cmpend
x86IR::  	ir_tag2_cmp:
x86IR::  	movl $1 var_58
x86IR::  	ir_tag2_cmpend:
x86IR::  	pushl expl_2
x86IR::  	call tag
x86IR::  	movl eax var_62
x86IR::  	cmpl $1 var_62
x86IR::  	je ir_tag3_cmp
x86IR::  	movl $0 var_61
x86IR::  	jmp ir_tag3_cmpend
x86IR::  	ir_tag3_cmp:
x86IR::  	movl $1 var_61
x86IR::  	ir_tag3_cmpend:
x86IR::  	movl var_58 var_57
x86IR::  	orl var_61 var_57
x86IR::  	movl var_49 var_48
x86IR::  	andl var_57 var_48
x86IR::  	pushl var_48
x86IR::  	call inject_bool
x86IR::  	movl eax var_47
x86IR::  	pushl var_47
x86IR::  	call tag
x86IR::  	movl eax var_67
x86IR::  	cmpl $0 var_67
x86IR::  	je ir_tag4_cmp
x86IR::  	movl $0 var_67
x86IR::  	jmp ir_tag4_cmpend
x86IR::  	ir_tag4_cmp:
x86IR::  	movl $1 var_67
x86IR::  	ir_tag4_cmpend:
x86IR::  	cmpl $0 var_67
x86IR::  	je ir_tag_else_5
x86IR::  	pushl var_47
x86IR::  	call project_int
x86IR::  	movl eax var_47
x86IR::  	jmp ir_tag_end_5
x86IR::  	ir_tag_else_5:
x86IR::  	pushl var_47
x86IR::  	call project_bool
x86IR::  	movl eax var_47
x86IR::  	jmp ir_tag_end_5
x86IR::  	ir_tag_end_5:
x86IR::  	cmpl $0 var_47
x86IR::  	je ir_tag_else_6
x86IR::  	pushl expl_1
x86IR::  	call tag
x86IR::  	movl eax var_26
x86IR::  	pushl expl_2
x86IR::  	call tag
x86IR::  	movl eax var_27
x86IR::  	cmpl var_26 var_27
x86IR::  	je ir_tag7_cmp
x86IR::  	movl $0 var_25
x86IR::  	jmp ir_tag7_cmpend
x86IR::  	ir_tag7_cmp:
x86IR::  	movl $1 var_25
x86IR::  	ir_tag7_cmpend:
x86IR::  	pushl var_25
x86IR::  	call inject_bool
x86IR::  	movl eax var_24
x86IR::  	pushl var_24
x86IR::  	call tag
x86IR::  	movl eax var_30
x86IR::  	cmpl $0 var_30
x86IR::  	je ir_tag8_cmp
x86IR::  	movl $0 var_30
x86IR::  	jmp ir_tag8_cmpend
x86IR::  	ir_tag8_cmp:
x86IR::  	movl $1 var_30
x86IR::  	ir_tag8_cmpend:
x86IR::  	cmpl $0 var_30
x86IR::  	je ir_tag_else_9
x86IR::  	pushl var_24
x86IR::  	call project_int
x86IR::  	movl eax var_24
x86IR::  	jmp ir_tag_end_9
x86IR::  	ir_tag_else_9:
x86IR::  	pushl var_24
x86IR::  	call project_bool
x86IR::  	movl eax var_24
x86IR::  	jmp ir_tag_end_9
x86IR::  	ir_tag_end_9:
x86IR::  	cmpl $0 var_24
x86IR::  	je ir_tag_else_10
x86IR::  	pushl expl_1
x86IR::  	call tag
x86IR::  	movl eax var_7
x86IR::  	cmpl $0 var_7
x86IR::  	je ir_tag11_cmp
x86IR::  	movl $0 var_6
x86IR::  	jmp ir_tag11_cmpend
x86IR::  	ir_tag11_cmp:
x86IR::  	movl $1 var_6
x86IR::  	ir_tag11_cmpend:
x86IR::  	pushl var_6
x86IR::  	call inject_bool
x86IR::  	movl eax var_5
x86IR::  	pushl var_5
x86IR::  	call tag
x86IR::  	movl eax var_10
x86IR::  	cmpl $0 var_10
x86IR::  	je ir_tag12_cmp
x86IR::  	movl $0 var_10
x86IR::  	jmp ir_tag12_cmpend
x86IR::  	ir_tag12_cmp:
x86IR::  	movl $1 var_10
x86IR::  	ir_tag12_cmpend:
x86IR::  	cmpl $0 var_10
x86IR::  	je ir_tag_else_13
x86IR::  	pushl var_5
x86IR::  	call project_int
x86IR::  	movl eax var_5
x86IR::  	jmp ir_tag_end_13
x86IR::  	ir_tag_else_13:
x86IR::  	pushl var_5
x86IR::  	call project_bool
x86IR::  	movl eax var_5
x86IR::  	jmp ir_tag_end_13
x86IR::  	ir_tag_end_13:
x86IR::  	cmpl $0 var_5
x86IR::  	je ir_tag_else_14
x86IR::  	pushl expl_1
x86IR::  	call project_int
x86IR::  	movl eax var_2
x86IR::  	movl var_2 var_2
x86IR::  	jmp ir_tag_end_14
x86IR::  	ir_tag_else_14:
x86IR::  	pushl expl_1
x86IR::  	call project_bool
x86IR::  	movl eax var_3
x86IR::  	movl var_3 var_2
x86IR::  	jmp ir_tag_end_14
x86IR::  	ir_tag_end_14:
x86IR::  	pushl expl_2
x86IR::  	call tag
x86IR::  	movl eax var_17
x86IR::  	cmpl $0 var_17
x86IR::  	je ir_tag15_cmp
x86IR::  	movl $0 var_16
x86IR::  	jmp ir_tag15_cmpend
x86IR::  	ir_tag15_cmp:
x86IR::  	movl $1 var_16
x86IR::  	ir_tag15_cmpend:
x86IR::  	pushl var_16
x86IR::  	call inject_bool
x86IR::  	movl eax var_15
x86IR::  	pushl var_15
x86IR::  	call tag
x86IR::  	movl eax var_20
x86IR::  	cmpl $0 var_20
x86IR::  	je ir_tag16_cmp
x86IR::  	movl $0 var_20
x86IR::  	jmp ir_tag16_cmpend
x86IR::  	ir_tag16_cmp:
x86IR::  	movl $1 var_20
x86IR::  	ir_tag16_cmpend:
x86IR::  	cmpl $0 var_20
x86IR::  	je ir_tag_else_17
x86IR::  	pushl var_15
x86IR::  	call project_int
x86IR::  	movl eax var_15
x86IR::  	jmp ir_tag_end_17
x86IR::  	ir_tag_else_17:
x86IR::  	pushl var_15
x86IR::  	call project_bool
x86IR::  	movl eax var_15
x86IR::  	jmp ir_tag_end_17
x86IR::  	ir_tag_end_17:
x86IR::  	cmpl $0 var_15
x86IR::  	je ir_tag_else_18
x86IR::  	pushl expl_2
x86IR::  	call project_int
x86IR::  	movl eax var_12
x86IR::  	movl var_12 var_12
x86IR::  	jmp ir_tag_end_18
x86IR::  	ir_tag_else_18:
x86IR::  	pushl expl_2
x86IR::  	call project_bool
x86IR::  	movl eax var_13
x86IR::  	movl var_13 var_12
x86IR::  	jmp ir_tag_end_18
x86IR::  	ir_tag_end_18:
x86IR::  	cmpl var_2 var_12
x86IR::  	je ir_tag19_cmp
x86IR::  	movl $0 var_1
x86IR::  	jmp ir_tag19_cmpend
x86IR::  	ir_tag19_cmp:
x86IR::  	movl $1 var_1
x86IR::  	ir_tag19_cmpend:
x86IR::  	pushl var_1
x86IR::  	call inject_bool
x86IR::  	movl eax var_0
x86IR::  	movl var_0 var_0
x86IR::  	jmp ir_tag_end_10
x86IR::  	ir_tag_else_10:
x86IR::  	pushl $0
x86IR::  	call inject_bool
x86IR::  	movl eax var_23
x86IR::  	movl var_23 var_0
x86IR::  	jmp ir_tag_end_10
x86IR::  	ir_tag_end_10:
x86IR::  	movl var_0 expl_0
x86IR::  	movl expl_0 var_0
x86IR::  	jmp ir_tag_end_6
x86IR::  	ir_tag_else_6:
x86IR::  	pushl expl_1
x86IR::  	call tag
x86IR::  	movl eax var_38
x86IR::  	cmpl $3 var_38
x86IR::  	je ir_tag20_cmp
x86IR::  	movl $0 var_37
x86IR::  	jmp ir_tag20_cmpend
x86IR::  	ir_tag20_cmp:
x86IR::  	movl $1 var_37
x86IR::  	ir_tag20_cmpend:
x86IR::  	pushl expl_2
x86IR::  	call tag
x86IR::  	movl eax var_41
x86IR::  	cmpl $3 var_41
x86IR::  	je ir_tag21_cmp
x86IR::  	movl $0 var_40
x86IR::  	jmp ir_tag21_cmpend
x86IR::  	ir_tag21_cmp:
x86IR::  	movl $1 var_40
x86IR::  	ir_tag21_cmpend:
x86IR::  	movl var_37 var_36
x86IR::  	andl var_40 var_36
x86IR::  	pushl var_36
x86IR::  	call inject_bool
x86IR::  	movl eax var_35
x86IR::  	pushl var_35
x86IR::  	call tag
x86IR::  	movl eax var_45
x86IR::  	cmpl $0 var_45
x86IR::  	je ir_tag22_cmp
x86IR::  	movl $0 var_45
x86IR::  	jmp ir_tag22_cmpend
x86IR::  	ir_tag22_cmp:
x86IR::  	movl $1 var_45
x86IR::  	ir_tag22_cmpend:
x86IR::  	cmpl $0 var_45
x86IR::  	je ir_tag_else_23
x86IR::  	pushl var_35
x86IR::  	call project_int
x86IR::  	movl eax var_35
x86IR::  	jmp ir_tag_end_23
x86IR::  	ir_tag_else_23:
x86IR::  	pushl var_35
x86IR::  	call project_bool
x86IR::  	movl eax var_35
x86IR::  	jmp ir_tag_end_23
x86IR::  	ir_tag_end_23:
x86IR::  	cmpl $0 var_35
x86IR::  	je ir_tag_else_24
x86IR::  	cmpl user_x user_y
x86IR::  	je ir_tag25_cmp
x86IR::  	movl $0 var_32
x86IR::  	jmp ir_tag25_cmpend
x86IR::  	ir_tag25_cmp:
x86IR::  	movl $1 var_32
x86IR::  	ir_tag25_cmpend:
x86IR::  	pushl var_32
x86IR::  	call inject_bool
x86IR::  	movl eax var_31
x86IR::  	movl var_31 expl_0
x86IR::  	movl expl_0 var_31
x86IR::  	movl var_31 var_0
x86IR::  	jmp ir_tag_end_24
x86IR::  	ir_tag_else_24:
x86IR::  	call call_error
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_34
x86IR::  	movl var_34 var_31
x86IR::  	movl var_31 var_0
x86IR::  	jmp ir_tag_end_24
x86IR::  	ir_tag_end_24:
x86IR::  	jmp ir_tag_end_6
x86IR::  	ir_tag_end_6:
x86IR::  	movl expl_0 var_0
x86IR::  	movl expl_0 var_0
x86IR::  	movl var_0 expl_3
x86IR::  	pushl expl_3
x86IR::  	call tag
x86IR::  	movl eax var_87
x86IR::  	cmpl $0 var_87
x86IR::  	je ir_tag26_cmp
x86IR::  	movl $0 var_86
x86IR::  	jmp ir_tag26_cmpend
x86IR::  	ir_tag26_cmp:
x86IR::  	movl $1 var_86
x86IR::  	ir_tag26_cmpend:
x86IR::  	pushl var_86
x86IR::  	call inject_bool
x86IR::  	movl eax var_85
x86IR::  	pushl var_85
x86IR::  	call tag
x86IR::  	movl eax var_90
x86IR::  	cmpl $0 var_90
x86IR::  	je ir_tag27_cmp
x86IR::  	movl $0 var_90
x86IR::  	jmp ir_tag27_cmpend
x86IR::  	ir_tag27_cmp:
x86IR::  	movl $1 var_90
x86IR::  	ir_tag27_cmpend:
x86IR::  	cmpl $0 var_90
x86IR::  	je ir_tag_else_28
x86IR::  	pushl var_85
x86IR::  	call project_int
x86IR::  	movl eax var_85
x86IR::  	jmp ir_tag_end_28
x86IR::  	ir_tag_else_28:
x86IR::  	pushl var_85
x86IR::  	call project_bool
x86IR::  	movl eax var_85
x86IR::  	jmp ir_tag_end_28
x86IR::  	ir_tag_end_28:
x86IR::  	cmpl $0 var_85
x86IR::  	je ir_tag_else_29
x86IR::  	pushl expl_3
x86IR::  	call project_int
x86IR::  	movl eax var_69
x86IR::  	pushl var_69
x86IR::  	call print_int_nl
x86IR::  	jmp ir_tag_end_29
x86IR::  	ir_tag_else_29:
x86IR::  	pushl expl_3
x86IR::  	call tag
x86IR::  	movl eax var_80
x86IR::  	cmpl $1 var_80
x86IR::  	je ir_tag30_cmp
x86IR::  	movl $0 var_79
x86IR::  	jmp ir_tag30_cmpend
x86IR::  	ir_tag30_cmp:
x86IR::  	movl $1 var_79
x86IR::  	ir_tag30_cmpend:
x86IR::  	pushl var_79
x86IR::  	call inject_bool
x86IR::  	movl eax var_78
x86IR::  	pushl var_78
x86IR::  	call tag
x86IR::  	movl eax var_83
x86IR::  	cmpl $0 var_83
x86IR::  	je ir_tag31_cmp
x86IR::  	movl $0 var_83
x86IR::  	jmp ir_tag31_cmpend
x86IR::  	ir_tag31_cmp:
x86IR::  	movl $1 var_83
x86IR::  	ir_tag31_cmpend:
x86IR::  	cmpl $0 var_83
x86IR::  	je ir_tag_else_32
x86IR::  	pushl var_78
x86IR::  	call project_int
x86IR::  	movl eax var_78
x86IR::  	jmp ir_tag_end_32
x86IR::  	ir_tag_else_32:
x86IR::  	pushl var_78
x86IR::  	call project_bool
x86IR::  	movl eax var_78
x86IR::  	jmp ir_tag_end_32
x86IR::  	ir_tag_end_32:
x86IR::  	cmpl $0 var_78
x86IR::  	je ir_tag_else_33
x86IR::  	pushl expl_3
x86IR::  	call print_any
x86IR::  	jmp ir_tag_end_33
x86IR::  	ir_tag_else_33:
x86IR::  	pushl expl_3
x86IR::  	call tag
x86IR::  	movl eax var_73
x86IR::  	cmpl $3 var_73
x86IR::  	je ir_tag34_cmp
x86IR::  	movl $0 var_72
x86IR::  	jmp ir_tag34_cmpend
x86IR::  	ir_tag34_cmp:
x86IR::  	movl $1 var_72
x86IR::  	ir_tag34_cmpend:
x86IR::  	pushl var_72
x86IR::  	call inject_bool
x86IR::  	movl eax var_71
x86IR::  	pushl var_71
x86IR::  	call tag
x86IR::  	movl eax var_76
x86IR::  	cmpl $0 var_76
x86IR::  	je ir_tag35_cmp
x86IR::  	movl $0 var_76
x86IR::  	jmp ir_tag35_cmpend
x86IR::  	ir_tag35_cmp:
x86IR::  	movl $1 var_76
x86IR::  	ir_tag35_cmpend:
x86IR::  	cmpl $0 var_76
x86IR::  	je ir_tag_else_36
x86IR::  	pushl var_71
x86IR::  	call project_int
x86IR::  	movl eax var_71
x86IR::  	jmp ir_tag_end_36
x86IR::  	ir_tag_else_36:
x86IR::  	pushl var_71
x86IR::  	call project_bool
x86IR::  	movl eax var_71
x86IR::  	jmp ir_tag_end_36
x86IR::  	ir_tag_end_36:
x86IR::  	cmpl $0 var_71
x86IR::  	je ir_tag_else_37
x86IR::  	pushl expl_3
x86IR::  	call print_any
x86IR::  	jmp ir_tag_end_37
x86IR::  	ir_tag_else_37:
x86IR::  	call call_error
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_70
x86IR::  	movl var_70 var_70
x86IR::  	movl var_70 var_70
x86IR::  	jmp ir_tag_end_37
x86IR::  	ir_tag_end_37:
x86IR::  	jmp ir_tag_end_33
x86IR::  	ir_tag_end_33:
x86IR::  	jmp ir_tag_end_29
x86IR::  	ir_tag_end_29:
VariableGraph::  # of variables: 64
