compiler:: base tree:
compiler::	Assign([AssName('number', 'OP_ASSIGN')], CallFunc(Name('input'), [], None, None))
compiler::	Assign([AssName('x', 'OP_ASSIGN')], UnarySub(Name('number')))
compiler::	Assign([AssName('y', 'OP_ASSIGN')], Add((Add((Name('number'), UnarySub(Name('number')))), UnarySub(Name('number')))))
compiler::	Assign([AssName('z', 'OP_ASSIGN')], Add((Not(Name('number')), UnarySub(Name('number')))))
compiler::	Printnl([Name('x')], None)
compiler::	Printnl([Name('y')], None)
compiler::	Printnl([Name('z')], None)
explicate:: Explicated Tree:
Module(None, Stmt([Assign([AssName('number', 'OP_ASSIGN')], CallFunc(Name('input'), [], None, None)), Assign([AssName('x', 'OP_ASSIGN')], UnarySub(Name('number'))), Assign([AssName('y', 'OP_ASSIGN')], Let(Name('expl_4'), Let(Name('expl_2'), Name('number'), Let(Name('expl_3'), UnarySub(Name('number')), IfExp(InjectFrom(bool, And([Or([Compare(Const(0), [('==', GetTag(Name('expl_2')))]), Compare(Const(1), [('==', GetTag(Name('expl_2')))])]), Or([Compare(Const(0), [('==', GetTag(Name('expl_3')))]), Compare(Const(1), [('==', GetTag(Name('expl_3')))])])])), Assign([Name('expl_1')], InjectFrom(int, Add((IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_2')))])), ProjectTo(int, Name('expl_2')), ProjectTo(bool, Name('expl_2'))), IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_3')))])), ProjectTo(int, Name('expl_3')), ProjectTo(bool, Name('expl_3'))))))), IfExp(InjectFrom(bool, And([Compare(Const(3), [('==', GetTag(Name('expl_2')))]), Compare(Const(3), [('==', GetTag(Name('expl_3')))])])), Assign([Name('expl_1')], InjectFrom(big, CallBigAdd(ProjectTo(big, Name('expl_2')), ProjectTo(big, Name('expl_3'))))), CallFunc(Name('call_error'), [], None, None))))), Let(Name('expl_5'), UnarySub(Name('number')), IfExp(InjectFrom(bool, And([Or([Compare(Const(0), [('==', GetTag(Name('expl_4')))]), Compare(Const(1), [('==', GetTag(Name('expl_4')))])]), Or([Compare(Const(0), [('==', GetTag(Name('expl_5')))]), Compare(Const(1), [('==', GetTag(Name('expl_5')))])])])), Assign([Name('expl_0')], InjectFrom(int, Add((IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_4')))])), ProjectTo(int, Name('expl_4')), ProjectTo(bool, Name('expl_4'))), IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_5')))])), ProjectTo(int, Name('expl_5')), ProjectTo(bool, Name('expl_5'))))))), IfExp(InjectFrom(bool, And([Compare(Const(3), [('==', GetTag(Name('expl_4')))]), Compare(Const(3), [('==', GetTag(Name('expl_5')))])])), Assign([Name('expl_0')], InjectFrom(big, CallBigAdd(ProjectTo(big, Name('expl_4')), ProjectTo(big, Name('expl_5'))))), CallFunc(Name('call_error'), [], None, None)))))), Assign([AssName('z', 'OP_ASSIGN')], Let(Name('expl_9'), Let(Name('expl_8'), Name('number'), IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_8')))])), Assign([Name('expl_7')], InjectFrom(bool, Not(ProjectTo(int, Name('expl_8'))))), IfExp(InjectFrom(bool, Compare(Const(1), [('==', GetTag(Name('expl_8')))])), Assign([Name('expl_7')], InjectFrom(bool, Not(ProjectTo(bool, Name('expl_8'))))), CallFunc(Name('call_error'), [], None, None)))), Let(Name('expl_10'), UnarySub(Name('number')), IfExp(InjectFrom(bool, And([Or([Compare(Const(0), [('==', GetTag(Name('expl_9')))]), Compare(Const(1), [('==', GetTag(Name('expl_9')))])]), Or([Compare(Const(0), [('==', GetTag(Name('expl_10')))]), Compare(Const(1), [('==', GetTag(Name('expl_10')))])])])), Assign([Name('expl_6')], InjectFrom(int, Add((IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_9')))])), ProjectTo(int, Name('expl_9')), ProjectTo(bool, Name('expl_9'))), IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_10')))])), ProjectTo(int, Name('expl_10')), ProjectTo(bool, Name('expl_10'))))))), IfExp(InjectFrom(bool, And([Compare(Const(3), [('==', GetTag(Name('expl_9')))]), Compare(Const(3), [('==', GetTag(Name('expl_10')))])])), Assign([Name('expl_6')], InjectFrom(big, CallBigAdd(ProjectTo(big, Name('expl_9')), ProjectTo(big, Name('expl_10'))))), CallFunc(Name('call_error'), [], None, None)))))), Let(Name('expl_11'), Name('x'), IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_11')))])), Printnl([ProjectTo(int, Name('expl_11'))], None), IfExp(InjectFrom(bool, Compare(Const(1), [('==', GetTag(Name('expl_11')))])), PrintBool(Name('expl_11')), IfExp(InjectFrom(bool, Compare(Const(3), [('==', GetTag(Name('expl_11')))])), PrintBig(Name('expl_11')), CallFunc(Name('call_error'), [], None, None))))), Let(Name('expl_12'), Name('y'), IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_12')))])), Printnl([ProjectTo(int, Name('expl_12'))], None), IfExp(InjectFrom(bool, Compare(Const(1), [('==', GetTag(Name('expl_12')))])), PrintBool(Name('expl_12')), IfExp(InjectFrom(bool, Compare(Const(3), [('==', GetTag(Name('expl_12')))])), PrintBig(Name('expl_12')), CallFunc(Name('call_error'), [], None, None))))), Let(Name('expl_13'), Name('z'), IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_13')))])), Printnl([ProjectTo(int, Name('expl_13'))], None), IfExp(InjectFrom(bool, Compare(Const(1), [('==', GetTag(Name('expl_13')))])), PrintBool(Name('expl_13')), IfExp(InjectFrom(bool, Compare(Const(3), [('==', GetTag(Name('expl_13')))])), PrintBig(Name('expl_13')), CallFunc(Name('call_error'), [], None, None)))))]))
Flatten:: Flattened AST tree:
Flatten:: 	Assign([AssName('var_0', 'OP-ASSIGN')], CallFunc(Name('input'), [], None, None))
Flatten:: 	Assign([AssName('user_number', 'OP_ASSIGN')], Name('var_0'))
Flatten:: 	Assign([AssName('var_0', 'OP-ASSIGN')], UnarySub(Name('user_number')))
Flatten:: 	Assign([AssName('user_x', 'OP_ASSIGN')], Name('var_0'))
Flatten:: 	Let(Name('expl_2'), Name('user_number'), Stmt([Assign([AssName('var_1', 'OP-ASSIGN')], UnarySub(Name('user_number'))), Let(Name('expl_3'), Name('var_1'), Stmt([Assign([AssName('var_50', 'OP-ASSIGN')], GetTag(Name('expl_2'))), Assign([AssName('var_49', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_50'))])), Assign([AssName('var_53', 'OP-ASSIGN')], GetTag(Name('expl_2'))), Assign([AssName('var_52', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_53'))])), Assign([AssName('var_48', 'OP-ASSIGN')], Or([Name('var_49'), Name('var_52')])), Assign([AssName('var_58', 'OP-ASSIGN')], GetTag(Name('expl_3'))), Assign([AssName('var_57', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_58'))])), Assign([AssName('var_61', 'OP-ASSIGN')], GetTag(Name('expl_3'))), Assign([AssName('var_60', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_61'))])), Assign([AssName('var_56', 'OP-ASSIGN')], Or([Name('var_57'), Name('var_60')])), Assign([AssName('var_47', 'OP-ASSIGN')], And([Name('var_48'), Name('var_56')])), Assign([AssName('var_46', 'OP-ASSIGN')], InjectFrom(bool, Name('var_47'))), Assign([AssName('var_66', 'OP-ASSIGN')], GetTag(Name('var_46'))), Assign([AssName('var_66', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_66'))])), IfExp(Name('var_66'), Stmt([Assign([AssName('var_46', 'OP-ASSIGN')], ProjectTo(int, Name('var_46')))]), Stmt([Assign([AssName('var_46', 'OP-ASSIGN')], ProjectTo(bool, Name('var_46')))])), IfExp(Name('var_46'), Stmt([Assign([AssName('var_10', 'OP-ASSIGN')], GetTag(Name('expl_2'))), Assign([AssName('var_9', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_10'))])), Assign([AssName('var_8', 'OP-ASSIGN')], InjectFrom(bool, Name('var_9'))), Assign([AssName('var_13', 'OP-ASSIGN')], GetTag(Name('var_8'))), Assign([AssName('var_13', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_13'))])), IfExp(Name('var_13'), Stmt([Assign([AssName('var_8', 'OP-ASSIGN')], ProjectTo(int, Name('var_8')))]), Stmt([Assign([AssName('var_8', 'OP-ASSIGN')], ProjectTo(bool, Name('var_8')))])), IfExp(Name('var_8'), Stmt([Assign([AssName('var_5', 'OP-ASSIGN')], ProjectTo(int, Name('expl_2'))), Assign([AssName('var_5', 'OP-ASSIGN')], Name('var_5'))]), Stmt([Assign([AssName('var_6', 'OP-ASSIGN')], ProjectTo(bool, Name('expl_2'))), Assign([AssName('var_5', 'OP-ASSIGN')], Name('var_6'))])), Assign([AssName('var_20', 'OP-ASSIGN')], GetTag(Name('expl_3'))), Assign([AssName('var_19', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_20'))])), Assign([AssName('var_18', 'OP-ASSIGN')], InjectFrom(bool, Name('var_19'))), Assign([AssName('var_23', 'OP-ASSIGN')], GetTag(Name('var_18'))), Assign([AssName('var_23', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_23'))])), IfExp(Name('var_23'), Stmt([Assign([AssName('var_18', 'OP-ASSIGN')], ProjectTo(int, Name('var_18')))]), Stmt([Assign([AssName('var_18', 'OP-ASSIGN')], ProjectTo(bool, Name('var_18')))])), IfExp(Name('var_18'), Stmt([Assign([AssName('var_15', 'OP-ASSIGN')], ProjectTo(int, Name('expl_3'))), Assign([AssName('var_15', 'OP-ASSIGN')], Name('var_15'))]), Stmt([Assign([AssName('var_16', 'OP-ASSIGN')], ProjectTo(bool, Name('expl_3'))), Assign([AssName('var_15', 'OP-ASSIGN')], Name('var_16'))])), Assign([AssName('var_4', 'OP-ASSIGN')], Add((Name('var_5'), Name('var_15')))), Assign([AssName('var_3', 'OP-ASSIGN')], InjectFrom(int, Name('var_4'))), Assign([Name('expl_1')], Name('var_3')), Assign([AssName('var_3', 'OP-ASSIGN')], Name('expl_1'))]), Stmt([Assign([AssName('var_37', 'OP-ASSIGN')], GetTag(Name('expl_2'))), Assign([AssName('var_36', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_37'))])), Assign([AssName('var_40', 'OP-ASSIGN')], GetTag(Name('expl_3'))), Assign([AssName('var_39', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_40'))])), Assign([AssName('var_35', 'OP-ASSIGN')], And([Name('var_36'), Name('var_39')])), Assign([AssName('var_34', 'OP-ASSIGN')], InjectFrom(bool, Name('var_35'))), Assign([AssName('var_44', 'OP-ASSIGN')], GetTag(Name('var_34'))), Assign([AssName('var_44', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_44'))])), IfExp(Name('var_44'), Stmt([Assign([AssName('var_34', 'OP-ASSIGN')], ProjectTo(int, Name('var_34')))]), Stmt([Assign([AssName('var_34', 'OP-ASSIGN')], ProjectTo(bool, Name('var_34')))])), IfExp(Name('var_34'), Stmt([Assign([AssName('var_28', 'OP-ASSIGN')], ProjectTo(big, Name('expl_2'))), Assign([AssName('var_30', 'OP-ASSIGN')], ProjectTo(big, Name('expl_3'))), Assign([AssName('var_27', 'OP-ASSIGN')], CallBigAdd(Name('var_28'), Name('var_30'))), Assign([AssName('var_26', 'OP-ASSIGN')], InjectFrom(big, Name('var_27'))), Assign([Name('expl_1')], Name('var_26')), Assign([AssName('var_26', 'OP-ASSIGN')], Name('expl_1')), Assign([AssName('var_3', 'OP-ASSIGN')], Name('var_26'))]), Stmt([Assign([AssName('var_33', 'OP-ASSIGN')], CallFunc(Name('call_error'), [], None, None)), Assign([AssName('var_26', 'OP-ASSIGN')], Name('var_33')), Assign([AssName('var_3', 'OP-ASSIGN')], Name('var_26'))]))]))])), Assign([AssName('var_1', 'OP-ASSIGN')], Name('expl_1'))]))
Flatten:: 	Assign([AssName('var_1', 'OP-ASSIGN')], Name('expl_1'))
Flatten:: 	Let(Name('expl_4'), Name('var_1'), Stmt([Assign([AssName('var_68', 'OP-ASSIGN')], UnarySub(Name('user_number'))), Let(Name('expl_5'), Name('var_68'), Stmt([Assign([AssName('var_117', 'OP-ASSIGN')], GetTag(Name('expl_4'))), Assign([AssName('var_116', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_117'))])), Assign([AssName('var_120', 'OP-ASSIGN')], GetTag(Name('expl_4'))), Assign([AssName('var_119', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_120'))])), Assign([AssName('var_115', 'OP-ASSIGN')], Or([Name('var_116'), Name('var_119')])), Assign([AssName('var_125', 'OP-ASSIGN')], GetTag(Name('expl_5'))), Assign([AssName('var_124', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_125'))])), Assign([AssName('var_128', 'OP-ASSIGN')], GetTag(Name('expl_5'))), Assign([AssName('var_127', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_128'))])), Assign([AssName('var_123', 'OP-ASSIGN')], Or([Name('var_124'), Name('var_127')])), Assign([AssName('var_114', 'OP-ASSIGN')], And([Name('var_115'), Name('var_123')])), Assign([AssName('var_113', 'OP-ASSIGN')], InjectFrom(bool, Name('var_114'))), Assign([AssName('var_133', 'OP-ASSIGN')], GetTag(Name('var_113'))), Assign([AssName('var_133', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_133'))])), IfExp(Name('var_133'), Stmt([Assign([AssName('var_113', 'OP-ASSIGN')], ProjectTo(int, Name('var_113')))]), Stmt([Assign([AssName('var_113', 'OP-ASSIGN')], ProjectTo(bool, Name('var_113')))])), IfExp(Name('var_113'), Stmt([Assign([AssName('var_77', 'OP-ASSIGN')], GetTag(Name('expl_4'))), Assign([AssName('var_76', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_77'))])), Assign([AssName('var_75', 'OP-ASSIGN')], InjectFrom(bool, Name('var_76'))), Assign([AssName('var_80', 'OP-ASSIGN')], GetTag(Name('var_75'))), Assign([AssName('var_80', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_80'))])), IfExp(Name('var_80'), Stmt([Assign([AssName('var_75', 'OP-ASSIGN')], ProjectTo(int, Name('var_75')))]), Stmt([Assign([AssName('var_75', 'OP-ASSIGN')], ProjectTo(bool, Name('var_75')))])), IfExp(Name('var_75'), Stmt([Assign([AssName('var_72', 'OP-ASSIGN')], ProjectTo(int, Name('expl_4'))), Assign([AssName('var_72', 'OP-ASSIGN')], Name('var_72'))]), Stmt([Assign([AssName('var_73', 'OP-ASSIGN')], ProjectTo(bool, Name('expl_4'))), Assign([AssName('var_72', 'OP-ASSIGN')], Name('var_73'))])), Assign([AssName('var_87', 'OP-ASSIGN')], GetTag(Name('expl_5'))), Assign([AssName('var_86', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_87'))])), Assign([AssName('var_85', 'OP-ASSIGN')], InjectFrom(bool, Name('var_86'))), Assign([AssName('var_90', 'OP-ASSIGN')], GetTag(Name('var_85'))), Assign([AssName('var_90', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_90'))])), IfExp(Name('var_90'), Stmt([Assign([AssName('var_85', 'OP-ASSIGN')], ProjectTo(int, Name('var_85')))]), Stmt([Assign([AssName('var_85', 'OP-ASSIGN')], ProjectTo(bool, Name('var_85')))])), IfExp(Name('var_85'), Stmt([Assign([AssName('var_82', 'OP-ASSIGN')], ProjectTo(int, Name('expl_5'))), Assign([AssName('var_82', 'OP-ASSIGN')], Name('var_82'))]), Stmt([Assign([AssName('var_83', 'OP-ASSIGN')], ProjectTo(bool, Name('expl_5'))), Assign([AssName('var_82', 'OP-ASSIGN')], Name('var_83'))])), Assign([AssName('var_71', 'OP-ASSIGN')], Add((Name('var_72'), Name('var_82')))), Assign([AssName('var_70', 'OP-ASSIGN')], InjectFrom(int, Name('var_71'))), Assign([Name('expl_0')], Name('var_70')), Assign([AssName('var_70', 'OP-ASSIGN')], Name('expl_0'))]), Stmt([Assign([AssName('var_104', 'OP-ASSIGN')], GetTag(Name('expl_4'))), Assign([AssName('var_103', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_104'))])), Assign([AssName('var_107', 'OP-ASSIGN')], GetTag(Name('expl_5'))), Assign([AssName('var_106', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_107'))])), Assign([AssName('var_102', 'OP-ASSIGN')], And([Name('var_103'), Name('var_106')])), Assign([AssName('var_101', 'OP-ASSIGN')], InjectFrom(bool, Name('var_102'))), Assign([AssName('var_111', 'OP-ASSIGN')], GetTag(Name('var_101'))), Assign([AssName('var_111', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_111'))])), IfExp(Name('var_111'), Stmt([Assign([AssName('var_101', 'OP-ASSIGN')], ProjectTo(int, Name('var_101')))]), Stmt([Assign([AssName('var_101', 'OP-ASSIGN')], ProjectTo(bool, Name('var_101')))])), IfExp(Name('var_101'), Stmt([Assign([AssName('var_95', 'OP-ASSIGN')], ProjectTo(big, Name('expl_4'))), Assign([AssName('var_97', 'OP-ASSIGN')], ProjectTo(big, Name('expl_5'))), Assign([AssName('var_94', 'OP-ASSIGN')], CallBigAdd(Name('var_95'), Name('var_97'))), Assign([AssName('var_93', 'OP-ASSIGN')], InjectFrom(big, Name('var_94'))), Assign([Name('expl_0')], Name('var_93')), Assign([AssName('var_93', 'OP-ASSIGN')], Name('expl_0')), Assign([AssName('var_70', 'OP-ASSIGN')], Name('var_93'))]), Stmt([Assign([AssName('var_100', 'OP-ASSIGN')], CallFunc(Name('call_error'), [], None, None)), Assign([AssName('var_93', 'OP-ASSIGN')], Name('var_100')), Assign([AssName('var_70', 'OP-ASSIGN')], Name('var_93'))]))]))])), Assign([AssName('var_68', 'OP-ASSIGN')], Name('expl_0'))]))
Flatten:: 	Assign([AssName('var_1', 'OP-ASSIGN')], Name('expl_0'))
Flatten:: 	Assign([AssName('user_y', 'OP_ASSIGN')], Name('var_1'))
Flatten:: 	Let(Name('expl_8'), Name('user_number'), Stmt([Assign([AssName('var_154', 'OP-ASSIGN')], GetTag(Name('expl_8'))), Assign([AssName('var_153', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_154'))])), Assign([AssName('var_152', 'OP-ASSIGN')], InjectFrom(bool, Name('var_153'))), Assign([AssName('var_157', 'OP-ASSIGN')], GetTag(Name('var_152'))), Assign([AssName('var_157', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_157'))])), IfExp(Name('var_157'), Stmt([Assign([AssName('var_152', 'OP-ASSIGN')], ProjectTo(int, Name('var_152')))]), Stmt([Assign([AssName('var_152', 'OP-ASSIGN')], ProjectTo(bool, Name('var_152')))])), IfExp(Name('var_152'), Stmt([Assign([AssName('var_136', 'OP-ASSIGN')], ProjectTo(int, Name('expl_8'))), Assign([AssName('var_135', 'OP-ASSIGN')], Not(Name('var_136'))), Assign([AssName('var_134', 'OP-ASSIGN')], InjectFrom(bool, Name('var_135'))), Assign([Name('expl_7')], Name('var_134')), Assign([AssName('var_134', 'OP-ASSIGN')], Name('expl_7'))]), Stmt([Assign([AssName('var_147', 'OP-ASSIGN')], GetTag(Name('expl_8'))), Assign([AssName('var_146', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_147'))])), Assign([AssName('var_145', 'OP-ASSIGN')], InjectFrom(bool, Name('var_146'))), Assign([AssName('var_150', 'OP-ASSIGN')], GetTag(Name('var_145'))), Assign([AssName('var_150', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_150'))])), IfExp(Name('var_150'), Stmt([Assign([AssName('var_145', 'OP-ASSIGN')], ProjectTo(int, Name('var_145')))]), Stmt([Assign([AssName('var_145', 'OP-ASSIGN')], ProjectTo(bool, Name('var_145')))])), IfExp(Name('var_145'), Stmt([Assign([AssName('var_141', 'OP-ASSIGN')], ProjectTo(bool, Name('expl_8'))), Assign([AssName('var_140', 'OP-ASSIGN')], Not(Name('var_141'))), Assign([AssName('var_139', 'OP-ASSIGN')], InjectFrom(bool, Name('var_140'))), Assign([Name('expl_7')], Name('var_139')), Assign([AssName('var_139', 'OP-ASSIGN')], Name('expl_7')), Assign([AssName('var_134', 'OP-ASSIGN')], Name('var_139'))]), Stmt([Assign([AssName('var_144', 'OP-ASSIGN')], CallFunc(Name('call_error'), [], None, None)), Assign([AssName('var_139', 'OP-ASSIGN')], Name('var_144')), Assign([AssName('var_134', 'OP-ASSIGN')], Name('var_139'))]))]))]))
Flatten:: 	Assign([AssName('var_134', 'OP-ASSIGN')], Name('expl_7'))
Flatten:: 	Let(Name('expl_9'), Name('var_134'), Stmt([Assign([AssName('var_159', 'OP-ASSIGN')], UnarySub(Name('user_number'))), Let(Name('expl_10'), Name('var_159'), Stmt([Assign([AssName('var_208', 'OP-ASSIGN')], GetTag(Name('expl_9'))), Assign([AssName('var_207', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_208'))])), Assign([AssName('var_211', 'OP-ASSIGN')], GetTag(Name('expl_9'))), Assign([AssName('var_210', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_211'))])), Assign([AssName('var_206', 'OP-ASSIGN')], Or([Name('var_207'), Name('var_210')])), Assign([AssName('var_216', 'OP-ASSIGN')], GetTag(Name('expl_10'))), Assign([AssName('var_215', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_216'))])), Assign([AssName('var_219', 'OP-ASSIGN')], GetTag(Name('expl_10'))), Assign([AssName('var_218', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_219'))])), Assign([AssName('var_214', 'OP-ASSIGN')], Or([Name('var_215'), Name('var_218')])), Assign([AssName('var_205', 'OP-ASSIGN')], And([Name('var_206'), Name('var_214')])), Assign([AssName('var_204', 'OP-ASSIGN')], InjectFrom(bool, Name('var_205'))), Assign([AssName('var_224', 'OP-ASSIGN')], GetTag(Name('var_204'))), Assign([AssName('var_224', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_224'))])), IfExp(Name('var_224'), Stmt([Assign([AssName('var_204', 'OP-ASSIGN')], ProjectTo(int, Name('var_204')))]), Stmt([Assign([AssName('var_204', 'OP-ASSIGN')], ProjectTo(bool, Name('var_204')))])), IfExp(Name('var_204'), Stmt([Assign([AssName('var_168', 'OP-ASSIGN')], GetTag(Name('expl_9'))), Assign([AssName('var_167', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_168'))])), Assign([AssName('var_166', 'OP-ASSIGN')], InjectFrom(bool, Name('var_167'))), Assign([AssName('var_171', 'OP-ASSIGN')], GetTag(Name('var_166'))), Assign([AssName('var_171', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_171'))])), IfExp(Name('var_171'), Stmt([Assign([AssName('var_166', 'OP-ASSIGN')], ProjectTo(int, Name('var_166')))]), Stmt([Assign([AssName('var_166', 'OP-ASSIGN')], ProjectTo(bool, Name('var_166')))])), IfExp(Name('var_166'), Stmt([Assign([AssName('var_163', 'OP-ASSIGN')], ProjectTo(int, Name('expl_9'))), Assign([AssName('var_163', 'OP-ASSIGN')], Name('var_163'))]), Stmt([Assign([AssName('var_164', 'OP-ASSIGN')], ProjectTo(bool, Name('expl_9'))), Assign([AssName('var_163', 'OP-ASSIGN')], Name('var_164'))])), Assign([AssName('var_178', 'OP-ASSIGN')], GetTag(Name('expl_10'))), Assign([AssName('var_177', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_178'))])), Assign([AssName('var_176', 'OP-ASSIGN')], InjectFrom(bool, Name('var_177'))), Assign([AssName('var_181', 'OP-ASSIGN')], GetTag(Name('var_176'))), Assign([AssName('var_181', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_181'))])), IfExp(Name('var_181'), Stmt([Assign([AssName('var_176', 'OP-ASSIGN')], ProjectTo(int, Name('var_176')))]), Stmt([Assign([AssName('var_176', 'OP-ASSIGN')], ProjectTo(bool, Name('var_176')))])), IfExp(Name('var_176'), Stmt([Assign([AssName('var_173', 'OP-ASSIGN')], ProjectTo(int, Name('expl_10'))), Assign([AssName('var_173', 'OP-ASSIGN')], Name('var_173'))]), Stmt([Assign([AssName('var_174', 'OP-ASSIGN')], ProjectTo(bool, Name('expl_10'))), Assign([AssName('var_173', 'OP-ASSIGN')], Name('var_174'))])), Assign([AssName('var_162', 'OP-ASSIGN')], Add((Name('var_163'), Name('var_173')))), Assign([AssName('var_161', 'OP-ASSIGN')], InjectFrom(int, Name('var_162'))), Assign([Name('expl_6')], Name('var_161')), Assign([AssName('var_161', 'OP-ASSIGN')], Name('expl_6'))]), Stmt([Assign([AssName('var_195', 'OP-ASSIGN')], GetTag(Name('expl_9'))), Assign([AssName('var_194', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_195'))])), Assign([AssName('var_198', 'OP-ASSIGN')], GetTag(Name('expl_10'))), Assign([AssName('var_197', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_198'))])), Assign([AssName('var_193', 'OP-ASSIGN')], And([Name('var_194'), Name('var_197')])), Assign([AssName('var_192', 'OP-ASSIGN')], InjectFrom(bool, Name('var_193'))), Assign([AssName('var_202', 'OP-ASSIGN')], GetTag(Name('var_192'))), Assign([AssName('var_202', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_202'))])), IfExp(Name('var_202'), Stmt([Assign([AssName('var_192', 'OP-ASSIGN')], ProjectTo(int, Name('var_192')))]), Stmt([Assign([AssName('var_192', 'OP-ASSIGN')], ProjectTo(bool, Name('var_192')))])), IfExp(Name('var_192'), Stmt([Assign([AssName('var_186', 'OP-ASSIGN')], ProjectTo(big, Name('expl_9'))), Assign([AssName('var_188', 'OP-ASSIGN')], ProjectTo(big, Name('expl_10'))), Assign([AssName('var_185', 'OP-ASSIGN')], CallBigAdd(Name('var_186'), Name('var_188'))), Assign([AssName('var_184', 'OP-ASSIGN')], InjectFrom(big, Name('var_185'))), Assign([Name('expl_6')], Name('var_184')), Assign([AssName('var_184', 'OP-ASSIGN')], Name('expl_6')), Assign([AssName('var_161', 'OP-ASSIGN')], Name('var_184'))]), Stmt([Assign([AssName('var_191', 'OP-ASSIGN')], CallFunc(Name('call_error'), [], None, None)), Assign([AssName('var_184', 'OP-ASSIGN')], Name('var_191')), Assign([AssName('var_161', 'OP-ASSIGN')], Name('var_184'))]))]))])), Assign([AssName('var_159', 'OP-ASSIGN')], Name('expl_6'))]))
Flatten:: 	Assign([AssName('var_134', 'OP-ASSIGN')], Name('expl_6'))
Flatten:: 	Assign([AssName('user_z', 'OP_ASSIGN')], Name('var_134'))
Flatten:: 	Let(Name('expl_11'), Name('user_x'), Stmt([Assign([AssName('var_243', 'OP-ASSIGN')], GetTag(Name('expl_11'))), Assign([AssName('var_242', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_243'))])), Assign([AssName('var_241', 'OP-ASSIGN')], InjectFrom(bool, Name('var_242'))), Assign([AssName('var_246', 'OP-ASSIGN')], GetTag(Name('var_241'))), Assign([AssName('var_246', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_246'))])), IfExp(Name('var_246'), Stmt([Assign([AssName('var_241', 'OP-ASSIGN')], ProjectTo(int, Name('var_241')))]), Stmt([Assign([AssName('var_241', 'OP-ASSIGN')], ProjectTo(bool, Name('var_241')))])), IfExp(Name('var_241'), Stmt([Assign([AssName('var_225', 'OP-ASSIGN')], ProjectTo(int, Name('expl_11'))), Printnl([Name('var_225')], None)]), Stmt([Assign([AssName('var_236', 'OP-ASSIGN')], GetTag(Name('expl_11'))), Assign([AssName('var_235', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_236'))])), Assign([AssName('var_234', 'OP-ASSIGN')], InjectFrom(bool, Name('var_235'))), Assign([AssName('var_239', 'OP-ASSIGN')], GetTag(Name('var_234'))), Assign([AssName('var_239', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_239'))])), IfExp(Name('var_239'), Stmt([Assign([AssName('var_234', 'OP-ASSIGN')], ProjectTo(int, Name('var_234')))]), Stmt([Assign([AssName('var_234', 'OP-ASSIGN')], ProjectTo(bool, Name('var_234')))])), IfExp(Name('var_234'), Stmt([PrintBool(Name('expl_11'))]), Stmt([Assign([AssName('var_229', 'OP-ASSIGN')], GetTag(Name('expl_11'))), Assign([AssName('var_228', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_229'))])), Assign([AssName('var_227', 'OP-ASSIGN')], InjectFrom(bool, Name('var_228'))), Assign([AssName('var_232', 'OP-ASSIGN')], GetTag(Name('var_227'))), Assign([AssName('var_232', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_232'))])), IfExp(Name('var_232'), Stmt([Assign([AssName('var_227', 'OP-ASSIGN')], ProjectTo(int, Name('var_227')))]), Stmt([Assign([AssName('var_227', 'OP-ASSIGN')], ProjectTo(bool, Name('var_227')))])), IfExp(Name('var_227'), Stmt([PrintBig(Name('expl_11'))]), Stmt([Assign([AssName('var_226', 'OP-ASSIGN')], CallFunc(Name('call_error'), [], None, None)), Assign([AssName('var_226', 'OP-ASSIGN')], Name('var_226')), Assign([AssName('var_226', 'OP-ASSIGN')], Name('var_226'))]))]))]))]))
Flatten:: 	Let(Name('expl_12'), Name('user_y'), Stmt([Assign([AssName('var_265', 'OP-ASSIGN')], GetTag(Name('expl_12'))), Assign([AssName('var_264', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_265'))])), Assign([AssName('var_263', 'OP-ASSIGN')], InjectFrom(bool, Name('var_264'))), Assign([AssName('var_268', 'OP-ASSIGN')], GetTag(Name('var_263'))), Assign([AssName('var_268', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_268'))])), IfExp(Name('var_268'), Stmt([Assign([AssName('var_263', 'OP-ASSIGN')], ProjectTo(int, Name('var_263')))]), Stmt([Assign([AssName('var_263', 'OP-ASSIGN')], ProjectTo(bool, Name('var_263')))])), IfExp(Name('var_263'), Stmt([Assign([AssName('var_247', 'OP-ASSIGN')], ProjectTo(int, Name('expl_12'))), Printnl([Name('var_247')], None)]), Stmt([Assign([AssName('var_258', 'OP-ASSIGN')], GetTag(Name('expl_12'))), Assign([AssName('var_257', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_258'))])), Assign([AssName('var_256', 'OP-ASSIGN')], InjectFrom(bool, Name('var_257'))), Assign([AssName('var_261', 'OP-ASSIGN')], GetTag(Name('var_256'))), Assign([AssName('var_261', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_261'))])), IfExp(Name('var_261'), Stmt([Assign([AssName('var_256', 'OP-ASSIGN')], ProjectTo(int, Name('var_256')))]), Stmt([Assign([AssName('var_256', 'OP-ASSIGN')], ProjectTo(bool, Name('var_256')))])), IfExp(Name('var_256'), Stmt([PrintBool(Name('expl_12'))]), Stmt([Assign([AssName('var_251', 'OP-ASSIGN')], GetTag(Name('expl_12'))), Assign([AssName('var_250', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_251'))])), Assign([AssName('var_249', 'OP-ASSIGN')], InjectFrom(bool, Name('var_250'))), Assign([AssName('var_254', 'OP-ASSIGN')], GetTag(Name('var_249'))), Assign([AssName('var_254', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_254'))])), IfExp(Name('var_254'), Stmt([Assign([AssName('var_249', 'OP-ASSIGN')], ProjectTo(int, Name('var_249')))]), Stmt([Assign([AssName('var_249', 'OP-ASSIGN')], ProjectTo(bool, Name('var_249')))])), IfExp(Name('var_249'), Stmt([PrintBig(Name('expl_12'))]), Stmt([Assign([AssName('var_248', 'OP-ASSIGN')], CallFunc(Name('call_error'), [], None, None)), Assign([AssName('var_248', 'OP-ASSIGN')], Name('var_248')), Assign([AssName('var_248', 'OP-ASSIGN')], Name('var_248'))]))]))]))]))
Flatten:: 	Let(Name('expl_13'), Name('user_z'), Stmt([Assign([AssName('var_287', 'OP-ASSIGN')], GetTag(Name('expl_13'))), Assign([AssName('var_286', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_287'))])), Assign([AssName('var_285', 'OP-ASSIGN')], InjectFrom(bool, Name('var_286'))), Assign([AssName('var_290', 'OP-ASSIGN')], GetTag(Name('var_285'))), Assign([AssName('var_290', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_290'))])), IfExp(Name('var_290'), Stmt([Assign([AssName('var_285', 'OP-ASSIGN')], ProjectTo(int, Name('var_285')))]), Stmt([Assign([AssName('var_285', 'OP-ASSIGN')], ProjectTo(bool, Name('var_285')))])), IfExp(Name('var_285'), Stmt([Assign([AssName('var_269', 'OP-ASSIGN')], ProjectTo(int, Name('expl_13'))), Printnl([Name('var_269')], None)]), Stmt([Assign([AssName('var_280', 'OP-ASSIGN')], GetTag(Name('expl_13'))), Assign([AssName('var_279', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_280'))])), Assign([AssName('var_278', 'OP-ASSIGN')], InjectFrom(bool, Name('var_279'))), Assign([AssName('var_283', 'OP-ASSIGN')], GetTag(Name('var_278'))), Assign([AssName('var_283', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_283'))])), IfExp(Name('var_283'), Stmt([Assign([AssName('var_278', 'OP-ASSIGN')], ProjectTo(int, Name('var_278')))]), Stmt([Assign([AssName('var_278', 'OP-ASSIGN')], ProjectTo(bool, Name('var_278')))])), IfExp(Name('var_278'), Stmt([PrintBool(Name('expl_13'))]), Stmt([Assign([AssName('var_273', 'OP-ASSIGN')], GetTag(Name('expl_13'))), Assign([AssName('var_272', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_273'))])), Assign([AssName('var_271', 'OP-ASSIGN')], InjectFrom(bool, Name('var_272'))), Assign([AssName('var_276', 'OP-ASSIGN')], GetTag(Name('var_271'))), Assign([AssName('var_276', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_276'))])), IfExp(Name('var_276'), Stmt([Assign([AssName('var_271', 'OP-ASSIGN')], ProjectTo(int, Name('var_271')))]), Stmt([Assign([AssName('var_271', 'OP-ASSIGN')], ProjectTo(bool, Name('var_271')))])), IfExp(Name('var_271'), Stmt([PrintBig(Name('expl_13'))]), Stmt([Assign([AssName('var_270', 'OP-ASSIGN')], CallFunc(Name('call_error'), [], None, None)), Assign([AssName('var_270', 'OP-ASSIGN')], Name('var_270')), Assign([AssName('var_270', 'OP-ASSIGN')], Name('var_270'))]))]))]))]))
x86IR::  Intermediate representation:
x86IR::  	call input
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_0
x86IR::  	movl var_0 user_number
x86IR::  	pushl user_number
x86IR::  	call project_int
x86IR::  	negl eax
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_0
x86IR::  	movl var_0 user_x
x86IR::  	movl user_number expl_2
x86IR::  	pushl user_number
x86IR::  	call project_int
x86IR::  	negl eax
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_1
x86IR::  	movl var_1 expl_3
x86IR::  	pushl expl_2
x86IR::  	call tag
x86IR::  	movl eax var_50
x86IR::  	cmpl $0 var_50
x86IR::  	je ir_tag0_cmp
x86IR::  	movl $0 var_49
x86IR::  	jmp ir_tag0_cmpend
x86IR::  	ir_tag0_cmp:
x86IR::  	movl $1 var_49
x86IR::  	ir_tag0_cmpend:
x86IR::  	pushl expl_2
x86IR::  	call tag
x86IR::  	movl eax var_53
x86IR::  	cmpl $1 var_53
x86IR::  	je ir_tag1_cmp
x86IR::  	movl $0 var_52
x86IR::  	jmp ir_tag1_cmpend
x86IR::  	ir_tag1_cmp:
x86IR::  	movl $1 var_52
x86IR::  	ir_tag1_cmpend:
x86IR::  	movl var_49 var_48
x86IR::  	orl var_52 var_48
x86IR::  	pushl expl_3
x86IR::  	call tag
x86IR::  	movl eax var_58
x86IR::  	cmpl $0 var_58
x86IR::  	je ir_tag2_cmp
x86IR::  	movl $0 var_57
x86IR::  	jmp ir_tag2_cmpend
x86IR::  	ir_tag2_cmp:
x86IR::  	movl $1 var_57
x86IR::  	ir_tag2_cmpend:
x86IR::  	pushl expl_3
x86IR::  	call tag
x86IR::  	movl eax var_61
x86IR::  	cmpl $1 var_61
x86IR::  	je ir_tag3_cmp
x86IR::  	movl $0 var_60
x86IR::  	jmp ir_tag3_cmpend
x86IR::  	ir_tag3_cmp:
x86IR::  	movl $1 var_60
x86IR::  	ir_tag3_cmpend:
x86IR::  	movl var_57 var_56
x86IR::  	orl var_60 var_56
x86IR::  	movl var_48 var_47
x86IR::  	andl var_56 var_47
x86IR::  	pushl var_47
x86IR::  	call inject_bool
x86IR::  	movl eax var_46
x86IR::  	pushl var_46
x86IR::  	call tag
x86IR::  	movl eax var_66
x86IR::  	cmpl $0 var_66
x86IR::  	je ir_tag4_cmp
x86IR::  	movl $0 var_66
x86IR::  	jmp ir_tag4_cmpend
x86IR::  	ir_tag4_cmp:
x86IR::  	movl $1 var_66
x86IR::  	ir_tag4_cmpend:
x86IR::  	cmpl $0 var_66
x86IR::  	je ir_tag_else_5
x86IR::  	pushl var_46
x86IR::  	call project_int
x86IR::  	movl eax var_46
x86IR::  	jmp ir_tag_end_5
x86IR::  	ir_tag_else_5:
x86IR::  	pushl var_46
x86IR::  	call project_bool
x86IR::  	movl eax var_46
x86IR::  	jmp ir_tag_end_5
x86IR::  	ir_tag_end_5:
x86IR::  	cmpl $0 var_46
x86IR::  	je ir_tag_else_6
x86IR::  	pushl expl_2
x86IR::  	call tag
x86IR::  	movl eax var_10
x86IR::  	cmpl $0 var_10
x86IR::  	je ir_tag7_cmp
x86IR::  	movl $0 var_9
x86IR::  	jmp ir_tag7_cmpend
x86IR::  	ir_tag7_cmp:
x86IR::  	movl $1 var_9
x86IR::  	ir_tag7_cmpend:
x86IR::  	pushl var_9
x86IR::  	call inject_bool
x86IR::  	movl eax var_8
x86IR::  	pushl var_8
x86IR::  	call tag
x86IR::  	movl eax var_13
x86IR::  	cmpl $0 var_13
x86IR::  	je ir_tag8_cmp
x86IR::  	movl $0 var_13
x86IR::  	jmp ir_tag8_cmpend
x86IR::  	ir_tag8_cmp:
x86IR::  	movl $1 var_13
x86IR::  	ir_tag8_cmpend:
x86IR::  	cmpl $0 var_13
x86IR::  	je ir_tag_else_9
x86IR::  	pushl var_8
x86IR::  	call project_int
x86IR::  	movl eax var_8
x86IR::  	jmp ir_tag_end_9
x86IR::  	ir_tag_else_9:
x86IR::  	pushl var_8
x86IR::  	call project_bool
x86IR::  	movl eax var_8
x86IR::  	jmp ir_tag_end_9
x86IR::  	ir_tag_end_9:
x86IR::  	cmpl $0 var_8
x86IR::  	je ir_tag_else_10
x86IR::  	pushl expl_2
x86IR::  	call project_int
x86IR::  	movl eax var_5
x86IR::  	movl var_5 var_5
x86IR::  	jmp ir_tag_end_10
x86IR::  	ir_tag_else_10:
x86IR::  	pushl expl_2
x86IR::  	call project_bool
x86IR::  	movl eax var_6
x86IR::  	movl var_6 var_5
x86IR::  	jmp ir_tag_end_10
x86IR::  	ir_tag_end_10:
x86IR::  	pushl expl_3
x86IR::  	call tag
x86IR::  	movl eax var_20
x86IR::  	cmpl $0 var_20
x86IR::  	je ir_tag11_cmp
x86IR::  	movl $0 var_19
x86IR::  	jmp ir_tag11_cmpend
x86IR::  	ir_tag11_cmp:
x86IR::  	movl $1 var_19
x86IR::  	ir_tag11_cmpend:
x86IR::  	pushl var_19
x86IR::  	call inject_bool
x86IR::  	movl eax var_18
x86IR::  	pushl var_18
x86IR::  	call tag
x86IR::  	movl eax var_23
x86IR::  	cmpl $0 var_23
x86IR::  	je ir_tag12_cmp
x86IR::  	movl $0 var_23
x86IR::  	jmp ir_tag12_cmpend
x86IR::  	ir_tag12_cmp:
x86IR::  	movl $1 var_23
x86IR::  	ir_tag12_cmpend:
x86IR::  	cmpl $0 var_23
x86IR::  	je ir_tag_else_13
x86IR::  	pushl var_18
x86IR::  	call project_int
x86IR::  	movl eax var_18
x86IR::  	jmp ir_tag_end_13
x86IR::  	ir_tag_else_13:
x86IR::  	pushl var_18
x86IR::  	call project_bool
x86IR::  	movl eax var_18
x86IR::  	jmp ir_tag_end_13
x86IR::  	ir_tag_end_13:
x86IR::  	cmpl $0 var_18
x86IR::  	je ir_tag_else_14
x86IR::  	pushl expl_3
x86IR::  	call project_int
x86IR::  	movl eax var_15
x86IR::  	movl var_15 var_15
x86IR::  	jmp ir_tag_end_14
x86IR::  	ir_tag_else_14:
x86IR::  	pushl expl_3
x86IR::  	call project_bool
x86IR::  	movl eax var_16
x86IR::  	movl var_16 var_15
x86IR::  	jmp ir_tag_end_14
x86IR::  	ir_tag_end_14:
x86IR::  	movl var_5 var_4
x86IR::  	addl var_15 var_4
x86IR::  	pushl var_4
x86IR::  	call inject_int
x86IR::  	movl eax var_3
x86IR::  	movl var_3 expl_1
x86IR::  	movl expl_1 var_3
x86IR::  	jmp ir_tag_end_6
x86IR::  	ir_tag_else_6:
x86IR::  	pushl expl_2
x86IR::  	call tag
x86IR::  	movl eax var_37
x86IR::  	cmpl $3 var_37
x86IR::  	je ir_tag15_cmp
x86IR::  	movl $0 var_36
x86IR::  	jmp ir_tag15_cmpend
x86IR::  	ir_tag15_cmp:
x86IR::  	movl $1 var_36
x86IR::  	ir_tag15_cmpend:
x86IR::  	pushl expl_3
x86IR::  	call tag
x86IR::  	movl eax var_40
x86IR::  	cmpl $3 var_40
x86IR::  	je ir_tag16_cmp
x86IR::  	movl $0 var_39
x86IR::  	jmp ir_tag16_cmpend
x86IR::  	ir_tag16_cmp:
x86IR::  	movl $1 var_39
x86IR::  	ir_tag16_cmpend:
x86IR::  	movl var_36 var_35
x86IR::  	andl var_39 var_35
x86IR::  	pushl var_35
x86IR::  	call inject_bool
x86IR::  	movl eax var_34
x86IR::  	pushl var_34
x86IR::  	call tag
x86IR::  	movl eax var_44
x86IR::  	cmpl $0 var_44
x86IR::  	je ir_tag17_cmp
x86IR::  	movl $0 var_44
x86IR::  	jmp ir_tag17_cmpend
x86IR::  	ir_tag17_cmp:
x86IR::  	movl $1 var_44
x86IR::  	ir_tag17_cmpend:
x86IR::  	cmpl $0 var_44
x86IR::  	je ir_tag_else_18
x86IR::  	pushl var_34
x86IR::  	call project_int
x86IR::  	movl eax var_34
x86IR::  	jmp ir_tag_end_18
x86IR::  	ir_tag_else_18:
x86IR::  	pushl var_34
x86IR::  	call project_bool
x86IR::  	movl eax var_34
x86IR::  	jmp ir_tag_end_18
x86IR::  	ir_tag_end_18:
x86IR::  	cmpl $0 var_34
x86IR::  	je ir_tag_else_19
x86IR::  	pushl expl_2
x86IR::  	call project_big
x86IR::  	movl eax var_28
x86IR::  	pushl expl_3
x86IR::  	call project_big
x86IR::  	movl eax var_30
x86IR::  	pushl var_30
x86IR::  	pushl var_28
x86IR::  	call add
x86IR::  	movl eax var_27
x86IR::  	pushl var_27
x86IR::  	call inject_big
x86IR::  	movl eax var_26
x86IR::  	movl var_26 expl_1
x86IR::  	movl expl_1 var_26
x86IR::  	movl var_26 var_3
x86IR::  	jmp ir_tag_end_19
x86IR::  	ir_tag_else_19:
x86IR::  	call call_error
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_33
x86IR::  	movl var_33 var_26
x86IR::  	movl var_26 var_3
x86IR::  	jmp ir_tag_end_19
x86IR::  	ir_tag_end_19:
x86IR::  	jmp ir_tag_end_6
x86IR::  	ir_tag_end_6:
x86IR::  	movl expl_1 var_1
x86IR::  	movl expl_1 var_1
x86IR::  	movl var_1 expl_4
x86IR::  	pushl user_number
x86IR::  	call project_int
x86IR::  	negl eax
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_68
x86IR::  	movl var_68 expl_5
x86IR::  	pushl expl_4
x86IR::  	call tag
x86IR::  	movl eax var_117
x86IR::  	cmpl $0 var_117
x86IR::  	je ir_tag20_cmp
x86IR::  	movl $0 var_116
x86IR::  	jmp ir_tag20_cmpend
x86IR::  	ir_tag20_cmp:
x86IR::  	movl $1 var_116
x86IR::  	ir_tag20_cmpend:
x86IR::  	pushl expl_4
x86IR::  	call tag
x86IR::  	movl eax var_120
x86IR::  	cmpl $1 var_120
x86IR::  	je ir_tag21_cmp
x86IR::  	movl $0 var_119
x86IR::  	jmp ir_tag21_cmpend
x86IR::  	ir_tag21_cmp:
x86IR::  	movl $1 var_119
x86IR::  	ir_tag21_cmpend:
x86IR::  	movl var_116 var_115
x86IR::  	orl var_119 var_115
x86IR::  	pushl expl_5
x86IR::  	call tag
x86IR::  	movl eax var_125
x86IR::  	cmpl $0 var_125
x86IR::  	je ir_tag22_cmp
x86IR::  	movl $0 var_124
x86IR::  	jmp ir_tag22_cmpend
x86IR::  	ir_tag22_cmp:
x86IR::  	movl $1 var_124
x86IR::  	ir_tag22_cmpend:
x86IR::  	pushl expl_5
x86IR::  	call tag
x86IR::  	movl eax var_128
x86IR::  	cmpl $1 var_128
x86IR::  	je ir_tag23_cmp
x86IR::  	movl $0 var_127
x86IR::  	jmp ir_tag23_cmpend
x86IR::  	ir_tag23_cmp:
x86IR::  	movl $1 var_127
x86IR::  	ir_tag23_cmpend:
x86IR::  	movl var_124 var_123
x86IR::  	orl var_127 var_123
x86IR::  	movl var_115 var_114
x86IR::  	andl var_123 var_114
x86IR::  	pushl var_114
x86IR::  	call inject_bool
x86IR::  	movl eax var_113
x86IR::  	pushl var_113
x86IR::  	call tag
x86IR::  	movl eax var_133
x86IR::  	cmpl $0 var_133
x86IR::  	je ir_tag24_cmp
x86IR::  	movl $0 var_133
x86IR::  	jmp ir_tag24_cmpend
x86IR::  	ir_tag24_cmp:
x86IR::  	movl $1 var_133
x86IR::  	ir_tag24_cmpend:
x86IR::  	cmpl $0 var_133
x86IR::  	je ir_tag_else_25
x86IR::  	pushl var_113
x86IR::  	call project_int
x86IR::  	movl eax var_113
x86IR::  	jmp ir_tag_end_25
x86IR::  	ir_tag_else_25:
x86IR::  	pushl var_113
x86IR::  	call project_bool
x86IR::  	movl eax var_113
x86IR::  	jmp ir_tag_end_25
x86IR::  	ir_tag_end_25:
x86IR::  	cmpl $0 var_113
x86IR::  	je ir_tag_else_26
x86IR::  	pushl expl_4
x86IR::  	call tag
x86IR::  	movl eax var_77
x86IR::  	cmpl $0 var_77
x86IR::  	je ir_tag27_cmp
x86IR::  	movl $0 var_76
x86IR::  	jmp ir_tag27_cmpend
x86IR::  	ir_tag27_cmp:
x86IR::  	movl $1 var_76
x86IR::  	ir_tag27_cmpend:
x86IR::  	pushl var_76
x86IR::  	call inject_bool
x86IR::  	movl eax var_75
x86IR::  	pushl var_75
x86IR::  	call tag
x86IR::  	movl eax var_80
x86IR::  	cmpl $0 var_80
x86IR::  	je ir_tag28_cmp
x86IR::  	movl $0 var_80
x86IR::  	jmp ir_tag28_cmpend
x86IR::  	ir_tag28_cmp:
x86IR::  	movl $1 var_80
x86IR::  	ir_tag28_cmpend:
x86IR::  	cmpl $0 var_80
x86IR::  	je ir_tag_else_29
x86IR::  	pushl var_75
x86IR::  	call project_int
x86IR::  	movl eax var_75
x86IR::  	jmp ir_tag_end_29
x86IR::  	ir_tag_else_29:
x86IR::  	pushl var_75
x86IR::  	call project_bool
x86IR::  	movl eax var_75
x86IR::  	jmp ir_tag_end_29
x86IR::  	ir_tag_end_29:
x86IR::  	cmpl $0 var_75
x86IR::  	je ir_tag_else_30
x86IR::  	pushl expl_4
x86IR::  	call project_int
x86IR::  	movl eax var_72
x86IR::  	movl var_72 var_72
x86IR::  	jmp ir_tag_end_30
x86IR::  	ir_tag_else_30:
x86IR::  	pushl expl_4
x86IR::  	call project_bool
x86IR::  	movl eax var_73
x86IR::  	movl var_73 var_72
x86IR::  	jmp ir_tag_end_30
x86IR::  	ir_tag_end_30:
x86IR::  	pushl expl_5
x86IR::  	call tag
x86IR::  	movl eax var_87
x86IR::  	cmpl $0 var_87
x86IR::  	je ir_tag31_cmp
x86IR::  	movl $0 var_86
x86IR::  	jmp ir_tag31_cmpend
x86IR::  	ir_tag31_cmp:
x86IR::  	movl $1 var_86
x86IR::  	ir_tag31_cmpend:
x86IR::  	pushl var_86
x86IR::  	call inject_bool
x86IR::  	movl eax var_85
x86IR::  	pushl var_85
x86IR::  	call tag
x86IR::  	movl eax var_90
x86IR::  	cmpl $0 var_90
x86IR::  	je ir_tag32_cmp
x86IR::  	movl $0 var_90
x86IR::  	jmp ir_tag32_cmpend
x86IR::  	ir_tag32_cmp:
x86IR::  	movl $1 var_90
x86IR::  	ir_tag32_cmpend:
x86IR::  	cmpl $0 var_90
x86IR::  	je ir_tag_else_33
x86IR::  	pushl var_85
x86IR::  	call project_int
x86IR::  	movl eax var_85
x86IR::  	jmp ir_tag_end_33
x86IR::  	ir_tag_else_33:
x86IR::  	pushl var_85
x86IR::  	call project_bool
x86IR::  	movl eax var_85
x86IR::  	jmp ir_tag_end_33
x86IR::  	ir_tag_end_33:
x86IR::  	cmpl $0 var_85
x86IR::  	je ir_tag_else_34
x86IR::  	pushl expl_5
x86IR::  	call project_int
x86IR::  	movl eax var_82
x86IR::  	movl var_82 var_82
x86IR::  	jmp ir_tag_end_34
x86IR::  	ir_tag_else_34:
x86IR::  	pushl expl_5
x86IR::  	call project_bool
x86IR::  	movl eax var_83
x86IR::  	movl var_83 var_82
x86IR::  	jmp ir_tag_end_34
x86IR::  	ir_tag_end_34:
x86IR::  	movl var_72 var_71
x86IR::  	addl var_82 var_71
x86IR::  	pushl var_71
x86IR::  	call inject_int
x86IR::  	movl eax var_70
x86IR::  	movl var_70 expl_0
x86IR::  	movl expl_0 var_70
x86IR::  	jmp ir_tag_end_26
x86IR::  	ir_tag_else_26:
x86IR::  	pushl expl_4
x86IR::  	call tag
x86IR::  	movl eax var_104
x86IR::  	cmpl $3 var_104
x86IR::  	je ir_tag35_cmp
x86IR::  	movl $0 var_103
x86IR::  	jmp ir_tag35_cmpend
x86IR::  	ir_tag35_cmp:
x86IR::  	movl $1 var_103
x86IR::  	ir_tag35_cmpend:
x86IR::  	pushl expl_5
x86IR::  	call tag
x86IR::  	movl eax var_107
x86IR::  	cmpl $3 var_107
x86IR::  	je ir_tag36_cmp
x86IR::  	movl $0 var_106
x86IR::  	jmp ir_tag36_cmpend
x86IR::  	ir_tag36_cmp:
x86IR::  	movl $1 var_106
x86IR::  	ir_tag36_cmpend:
x86IR::  	movl var_103 var_102
x86IR::  	andl var_106 var_102
x86IR::  	pushl var_102
x86IR::  	call inject_bool
x86IR::  	movl eax var_101
x86IR::  	pushl var_101
x86IR::  	call tag
x86IR::  	movl eax var_111
x86IR::  	cmpl $0 var_111
x86IR::  	je ir_tag37_cmp
x86IR::  	movl $0 var_111
x86IR::  	jmp ir_tag37_cmpend
x86IR::  	ir_tag37_cmp:
x86IR::  	movl $1 var_111
x86IR::  	ir_tag37_cmpend:
x86IR::  	cmpl $0 var_111
x86IR::  	je ir_tag_else_38
x86IR::  	pushl var_101
x86IR::  	call project_int
x86IR::  	movl eax var_101
x86IR::  	jmp ir_tag_end_38
x86IR::  	ir_tag_else_38:
x86IR::  	pushl var_101
x86IR::  	call project_bool
x86IR::  	movl eax var_101
x86IR::  	jmp ir_tag_end_38
x86IR::  	ir_tag_end_38:
x86IR::  	cmpl $0 var_101
x86IR::  	je ir_tag_else_39
x86IR::  	pushl expl_4
x86IR::  	call project_big
x86IR::  	movl eax var_95
x86IR::  	pushl expl_5
x86IR::  	call project_big
x86IR::  	movl eax var_97
x86IR::  	pushl var_97
x86IR::  	pushl var_95
x86IR::  	call add
x86IR::  	movl eax var_94
x86IR::  	pushl var_94
x86IR::  	call inject_big
x86IR::  	movl eax var_93
x86IR::  	movl var_93 expl_0
x86IR::  	movl expl_0 var_93
x86IR::  	movl var_93 var_70
x86IR::  	jmp ir_tag_end_39
x86IR::  	ir_tag_else_39:
x86IR::  	call call_error
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_100
x86IR::  	movl var_100 var_93
x86IR::  	movl var_93 var_70
x86IR::  	jmp ir_tag_end_39
x86IR::  	ir_tag_end_39:
x86IR::  	jmp ir_tag_end_26
x86IR::  	ir_tag_end_26:
x86IR::  	movl expl_0 var_68
x86IR::  	movl expl_0 var_1
x86IR::  	movl var_1 user_y
x86IR::  	movl user_number expl_8
x86IR::  	pushl expl_8
x86IR::  	call tag
x86IR::  	movl eax var_154
x86IR::  	cmpl $0 var_154
x86IR::  	je ir_tag40_cmp
x86IR::  	movl $0 var_153
x86IR::  	jmp ir_tag40_cmpend
x86IR::  	ir_tag40_cmp:
x86IR::  	movl $1 var_153
x86IR::  	ir_tag40_cmpend:
x86IR::  	pushl var_153
x86IR::  	call inject_bool
x86IR::  	movl eax var_152
x86IR::  	pushl var_152
x86IR::  	call tag
x86IR::  	movl eax var_157
x86IR::  	cmpl $0 var_157
x86IR::  	je ir_tag41_cmp
x86IR::  	movl $0 var_157
x86IR::  	jmp ir_tag41_cmpend
x86IR::  	ir_tag41_cmp:
x86IR::  	movl $1 var_157
x86IR::  	ir_tag41_cmpend:
x86IR::  	cmpl $0 var_157
x86IR::  	je ir_tag_else_42
x86IR::  	pushl var_152
x86IR::  	call project_int
x86IR::  	movl eax var_152
x86IR::  	jmp ir_tag_end_42
x86IR::  	ir_tag_else_42:
x86IR::  	pushl var_152
x86IR::  	call project_bool
x86IR::  	movl eax var_152
x86IR::  	jmp ir_tag_end_42
x86IR::  	ir_tag_end_42:
x86IR::  	cmpl $0 var_152
x86IR::  	je ir_tag_else_43
x86IR::  	pushl expl_8
x86IR::  	call project_int
x86IR::  	movl eax var_136
x86IR::  	cmpl $0 var_136
x86IR::  	je ir_tag_not_notzero_44
x86IR::  	movl $0 var_135
x86IR::  	jmp ir_tag_not_end_44
x86IR::  	ir_tag_not_notzero_44:
x86IR::  	movl $1 var_135
x86IR::  	ir_tag_not_end_44:
x86IR::  	pushl var_135
x86IR::  	call inject_bool
x86IR::  	movl eax var_134
x86IR::  	movl var_134 expl_7
x86IR::  	movl expl_7 var_134
x86IR::  	jmp ir_tag_end_43
x86IR::  	ir_tag_else_43:
x86IR::  	pushl expl_8
x86IR::  	call tag
x86IR::  	movl eax var_147
x86IR::  	cmpl $1 var_147
x86IR::  	je ir_tag45_cmp
x86IR::  	movl $0 var_146
x86IR::  	jmp ir_tag45_cmpend
x86IR::  	ir_tag45_cmp:
x86IR::  	movl $1 var_146
x86IR::  	ir_tag45_cmpend:
x86IR::  	pushl var_146
x86IR::  	call inject_bool
x86IR::  	movl eax var_145
x86IR::  	pushl var_145
x86IR::  	call tag
x86IR::  	movl eax var_150
x86IR::  	cmpl $0 var_150
x86IR::  	je ir_tag46_cmp
x86IR::  	movl $0 var_150
x86IR::  	jmp ir_tag46_cmpend
x86IR::  	ir_tag46_cmp:
x86IR::  	movl $1 var_150
x86IR::  	ir_tag46_cmpend:
x86IR::  	cmpl $0 var_150
x86IR::  	je ir_tag_else_47
x86IR::  	pushl var_145
x86IR::  	call project_int
x86IR::  	movl eax var_145
x86IR::  	jmp ir_tag_end_47
x86IR::  	ir_tag_else_47:
x86IR::  	pushl var_145
x86IR::  	call project_bool
x86IR::  	movl eax var_145
x86IR::  	jmp ir_tag_end_47
x86IR::  	ir_tag_end_47:
x86IR::  	cmpl $0 var_145
x86IR::  	je ir_tag_else_48
x86IR::  	pushl expl_8
x86IR::  	call project_bool
x86IR::  	movl eax var_141
x86IR::  	cmpl $0 var_141
x86IR::  	je ir_tag_not_notzero_49
x86IR::  	movl $0 var_140
x86IR::  	jmp ir_tag_not_end_49
x86IR::  	ir_tag_not_notzero_49:
x86IR::  	movl $1 var_140
x86IR::  	ir_tag_not_end_49:
x86IR::  	pushl var_140
x86IR::  	call inject_bool
x86IR::  	movl eax var_139
x86IR::  	movl var_139 expl_7
x86IR::  	movl expl_7 var_139
x86IR::  	movl var_139 var_134
x86IR::  	jmp ir_tag_end_48
x86IR::  	ir_tag_else_48:
x86IR::  	call call_error
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_144
x86IR::  	movl var_144 var_139
x86IR::  	movl var_139 var_134
x86IR::  	jmp ir_tag_end_48
x86IR::  	ir_tag_end_48:
x86IR::  	jmp ir_tag_end_43
x86IR::  	ir_tag_end_43:
x86IR::  	movl expl_7 var_134
x86IR::  	movl var_134 expl_9
x86IR::  	pushl user_number
x86IR::  	call project_int
x86IR::  	negl eax
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_159
x86IR::  	movl var_159 expl_10
x86IR::  	pushl expl_9
x86IR::  	call tag
x86IR::  	movl eax var_208
x86IR::  	cmpl $0 var_208
x86IR::  	je ir_tag50_cmp
x86IR::  	movl $0 var_207
x86IR::  	jmp ir_tag50_cmpend
x86IR::  	ir_tag50_cmp:
x86IR::  	movl $1 var_207
x86IR::  	ir_tag50_cmpend:
x86IR::  	pushl expl_9
x86IR::  	call tag
x86IR::  	movl eax var_211
x86IR::  	cmpl $1 var_211
x86IR::  	je ir_tag51_cmp
x86IR::  	movl $0 var_210
x86IR::  	jmp ir_tag51_cmpend
x86IR::  	ir_tag51_cmp:
x86IR::  	movl $1 var_210
x86IR::  	ir_tag51_cmpend:
x86IR::  	movl var_207 var_206
x86IR::  	orl var_210 var_206
x86IR::  	pushl expl_10
x86IR::  	call tag
x86IR::  	movl eax var_216
x86IR::  	cmpl $0 var_216
x86IR::  	je ir_tag52_cmp
x86IR::  	movl $0 var_215
x86IR::  	jmp ir_tag52_cmpend
x86IR::  	ir_tag52_cmp:
x86IR::  	movl $1 var_215
x86IR::  	ir_tag52_cmpend:
x86IR::  	pushl expl_10
x86IR::  	call tag
x86IR::  	movl eax var_219
x86IR::  	cmpl $1 var_219
x86IR::  	je ir_tag53_cmp
x86IR::  	movl $0 var_218
x86IR::  	jmp ir_tag53_cmpend
x86IR::  	ir_tag53_cmp:
x86IR::  	movl $1 var_218
x86IR::  	ir_tag53_cmpend:
x86IR::  	movl var_215 var_214
x86IR::  	orl var_218 var_214
x86IR::  	movl var_206 var_205
x86IR::  	andl var_214 var_205
x86IR::  	pushl var_205
x86IR::  	call inject_bool
x86IR::  	movl eax var_204
x86IR::  	pushl var_204
x86IR::  	call tag
x86IR::  	movl eax var_224
x86IR::  	cmpl $0 var_224
x86IR::  	je ir_tag54_cmp
x86IR::  	movl $0 var_224
x86IR::  	jmp ir_tag54_cmpend
x86IR::  	ir_tag54_cmp:
x86IR::  	movl $1 var_224
x86IR::  	ir_tag54_cmpend:
x86IR::  	cmpl $0 var_224
x86IR::  	je ir_tag_else_55
x86IR::  	pushl var_204
x86IR::  	call project_int
x86IR::  	movl eax var_204
x86IR::  	jmp ir_tag_end_55
x86IR::  	ir_tag_else_55:
x86IR::  	pushl var_204
x86IR::  	call project_bool
x86IR::  	movl eax var_204
x86IR::  	jmp ir_tag_end_55
x86IR::  	ir_tag_end_55:
x86IR::  	cmpl $0 var_204
x86IR::  	je ir_tag_else_56
x86IR::  	pushl expl_9
x86IR::  	call tag
x86IR::  	movl eax var_168
x86IR::  	cmpl $0 var_168
x86IR::  	je ir_tag57_cmp
x86IR::  	movl $0 var_167
x86IR::  	jmp ir_tag57_cmpend
x86IR::  	ir_tag57_cmp:
x86IR::  	movl $1 var_167
x86IR::  	ir_tag57_cmpend:
x86IR::  	pushl var_167
x86IR::  	call inject_bool
x86IR::  	movl eax var_166
x86IR::  	pushl var_166
x86IR::  	call tag
x86IR::  	movl eax var_171
x86IR::  	cmpl $0 var_171
x86IR::  	je ir_tag58_cmp
x86IR::  	movl $0 var_171
x86IR::  	jmp ir_tag58_cmpend
x86IR::  	ir_tag58_cmp:
x86IR::  	movl $1 var_171
x86IR::  	ir_tag58_cmpend:
x86IR::  	cmpl $0 var_171
x86IR::  	je ir_tag_else_59
x86IR::  	pushl var_166
x86IR::  	call project_int
x86IR::  	movl eax var_166
x86IR::  	jmp ir_tag_end_59
x86IR::  	ir_tag_else_59:
x86IR::  	pushl var_166
x86IR::  	call project_bool
x86IR::  	movl eax var_166
x86IR::  	jmp ir_tag_end_59
x86IR::  	ir_tag_end_59:
x86IR::  	cmpl $0 var_166
x86IR::  	je ir_tag_else_60
x86IR::  	pushl expl_9
x86IR::  	call project_int
x86IR::  	movl eax var_163
x86IR::  	movl var_163 var_163
x86IR::  	jmp ir_tag_end_60
x86IR::  	ir_tag_else_60:
x86IR::  	pushl expl_9
x86IR::  	call project_bool
x86IR::  	movl eax var_164
x86IR::  	movl var_164 var_163
x86IR::  	jmp ir_tag_end_60
x86IR::  	ir_tag_end_60:
x86IR::  	pushl expl_10
x86IR::  	call tag
x86IR::  	movl eax var_178
x86IR::  	cmpl $0 var_178
x86IR::  	je ir_tag61_cmp
x86IR::  	movl $0 var_177
x86IR::  	jmp ir_tag61_cmpend
x86IR::  	ir_tag61_cmp:
x86IR::  	movl $1 var_177
x86IR::  	ir_tag61_cmpend:
x86IR::  	pushl var_177
x86IR::  	call inject_bool
x86IR::  	movl eax var_176
x86IR::  	pushl var_176
x86IR::  	call tag
x86IR::  	movl eax var_181
x86IR::  	cmpl $0 var_181
x86IR::  	je ir_tag62_cmp
x86IR::  	movl $0 var_181
x86IR::  	jmp ir_tag62_cmpend
x86IR::  	ir_tag62_cmp:
x86IR::  	movl $1 var_181
x86IR::  	ir_tag62_cmpend:
x86IR::  	cmpl $0 var_181
x86IR::  	je ir_tag_else_63
x86IR::  	pushl var_176
x86IR::  	call project_int
x86IR::  	movl eax var_176
x86IR::  	jmp ir_tag_end_63
x86IR::  	ir_tag_else_63:
x86IR::  	pushl var_176
x86IR::  	call project_bool
x86IR::  	movl eax var_176
x86IR::  	jmp ir_tag_end_63
x86IR::  	ir_tag_end_63:
x86IR::  	cmpl $0 var_176
x86IR::  	je ir_tag_else_64
x86IR::  	pushl expl_10
x86IR::  	call project_int
x86IR::  	movl eax var_173
x86IR::  	movl var_173 var_173
x86IR::  	jmp ir_tag_end_64
x86IR::  	ir_tag_else_64:
x86IR::  	pushl expl_10
x86IR::  	call project_bool
x86IR::  	movl eax var_174
x86IR::  	movl var_174 var_173
x86IR::  	jmp ir_tag_end_64
x86IR::  	ir_tag_end_64:
x86IR::  	movl var_163 var_162
x86IR::  	addl var_173 var_162
x86IR::  	pushl var_162
x86IR::  	call inject_int
x86IR::  	movl eax var_161
x86IR::  	movl var_161 expl_6
x86IR::  	movl expl_6 var_161
x86IR::  	jmp ir_tag_end_56
x86IR::  	ir_tag_else_56:
x86IR::  	pushl expl_9
x86IR::  	call tag
x86IR::  	movl eax var_195
x86IR::  	cmpl $3 var_195
x86IR::  	je ir_tag65_cmp
x86IR::  	movl $0 var_194
x86IR::  	jmp ir_tag65_cmpend
x86IR::  	ir_tag65_cmp:
x86IR::  	movl $1 var_194
x86IR::  	ir_tag65_cmpend:
x86IR::  	pushl expl_10
x86IR::  	call tag
x86IR::  	movl eax var_198
x86IR::  	cmpl $3 var_198
x86IR::  	je ir_tag66_cmp
x86IR::  	movl $0 var_197
x86IR::  	jmp ir_tag66_cmpend
x86IR::  	ir_tag66_cmp:
x86IR::  	movl $1 var_197
x86IR::  	ir_tag66_cmpend:
x86IR::  	movl var_194 var_193
x86IR::  	andl var_197 var_193
x86IR::  	pushl var_193
x86IR::  	call inject_bool
x86IR::  	movl eax var_192
x86IR::  	pushl var_192
x86IR::  	call tag
x86IR::  	movl eax var_202
x86IR::  	cmpl $0 var_202
x86IR::  	je ir_tag67_cmp
x86IR::  	movl $0 var_202
x86IR::  	jmp ir_tag67_cmpend
x86IR::  	ir_tag67_cmp:
x86IR::  	movl $1 var_202
x86IR::  	ir_tag67_cmpend:
x86IR::  	cmpl $0 var_202
x86IR::  	je ir_tag_else_68
x86IR::  	pushl var_192
x86IR::  	call project_int
x86IR::  	movl eax var_192
x86IR::  	jmp ir_tag_end_68
x86IR::  	ir_tag_else_68:
x86IR::  	pushl var_192
x86IR::  	call project_bool
x86IR::  	movl eax var_192
x86IR::  	jmp ir_tag_end_68
x86IR::  	ir_tag_end_68:
x86IR::  	cmpl $0 var_192
x86IR::  	je ir_tag_else_69
x86IR::  	pushl expl_9
x86IR::  	call project_big
x86IR::  	movl eax var_186
x86IR::  	pushl expl_10
x86IR::  	call project_big
x86IR::  	movl eax var_188
x86IR::  	pushl var_188
x86IR::  	pushl var_186
x86IR::  	call add
x86IR::  	movl eax var_185
x86IR::  	pushl var_185
x86IR::  	call inject_big
x86IR::  	movl eax var_184
x86IR::  	movl var_184 expl_6
x86IR::  	movl expl_6 var_184
x86IR::  	movl var_184 var_161
x86IR::  	jmp ir_tag_end_69
x86IR::  	ir_tag_else_69:
x86IR::  	call call_error
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_191
x86IR::  	movl var_191 var_184
x86IR::  	movl var_184 var_161
x86IR::  	jmp ir_tag_end_69
x86IR::  	ir_tag_end_69:
x86IR::  	jmp ir_tag_end_56
x86IR::  	ir_tag_end_56:
x86IR::  	movl expl_6 var_159
x86IR::  	movl expl_6 var_134
x86IR::  	movl var_134 user_z
x86IR::  	movl user_x expl_11
x86IR::  	pushl expl_11
x86IR::  	call tag
x86IR::  	movl eax var_243
x86IR::  	cmpl $0 var_243
x86IR::  	je ir_tag70_cmp
x86IR::  	movl $0 var_242
x86IR::  	jmp ir_tag70_cmpend
x86IR::  	ir_tag70_cmp:
x86IR::  	movl $1 var_242
x86IR::  	ir_tag70_cmpend:
x86IR::  	pushl var_242
x86IR::  	call inject_bool
x86IR::  	movl eax var_241
x86IR::  	pushl var_241
x86IR::  	call tag
x86IR::  	movl eax var_246
x86IR::  	cmpl $0 var_246
x86IR::  	je ir_tag71_cmp
x86IR::  	movl $0 var_246
x86IR::  	jmp ir_tag71_cmpend
x86IR::  	ir_tag71_cmp:
x86IR::  	movl $1 var_246
x86IR::  	ir_tag71_cmpend:
x86IR::  	cmpl $0 var_246
x86IR::  	je ir_tag_else_72
x86IR::  	pushl var_241
x86IR::  	call project_int
x86IR::  	movl eax var_241
x86IR::  	jmp ir_tag_end_72
x86IR::  	ir_tag_else_72:
x86IR::  	pushl var_241
x86IR::  	call project_bool
x86IR::  	movl eax var_241
x86IR::  	jmp ir_tag_end_72
x86IR::  	ir_tag_end_72:
x86IR::  	cmpl $0 var_241
x86IR::  	je ir_tag_else_73
x86IR::  	pushl expl_11
x86IR::  	call project_int
x86IR::  	movl eax var_225
x86IR::  	pushl var_225
x86IR::  	call print_int_nl
x86IR::  	jmp ir_tag_end_73
x86IR::  	ir_tag_else_73:
x86IR::  	pushl expl_11
x86IR::  	call tag
x86IR::  	movl eax var_236
x86IR::  	cmpl $1 var_236
x86IR::  	je ir_tag74_cmp
x86IR::  	movl $0 var_235
x86IR::  	jmp ir_tag74_cmpend
x86IR::  	ir_tag74_cmp:
x86IR::  	movl $1 var_235
x86IR::  	ir_tag74_cmpend:
x86IR::  	pushl var_235
x86IR::  	call inject_bool
x86IR::  	movl eax var_234
x86IR::  	pushl var_234
x86IR::  	call tag
x86IR::  	movl eax var_239
x86IR::  	cmpl $0 var_239
x86IR::  	je ir_tag75_cmp
x86IR::  	movl $0 var_239
x86IR::  	jmp ir_tag75_cmpend
x86IR::  	ir_tag75_cmp:
x86IR::  	movl $1 var_239
x86IR::  	ir_tag75_cmpend:
x86IR::  	cmpl $0 var_239
x86IR::  	je ir_tag_else_76
x86IR::  	pushl var_234
x86IR::  	call project_int
x86IR::  	movl eax var_234
x86IR::  	jmp ir_tag_end_76
x86IR::  	ir_tag_else_76:
x86IR::  	pushl var_234
x86IR::  	call project_bool
x86IR::  	movl eax var_234
x86IR::  	jmp ir_tag_end_76
x86IR::  	ir_tag_end_76:
x86IR::  	cmpl $0 var_234
x86IR::  	je ir_tag_else_77
x86IR::  	pushl expl_11
x86IR::  	call print_any
x86IR::  	jmp ir_tag_end_77
x86IR::  	ir_tag_else_77:
x86IR::  	pushl expl_11
x86IR::  	call tag
x86IR::  	movl eax var_229
x86IR::  	cmpl $3 var_229
x86IR::  	je ir_tag78_cmp
x86IR::  	movl $0 var_228
x86IR::  	jmp ir_tag78_cmpend
x86IR::  	ir_tag78_cmp:
x86IR::  	movl $1 var_228
x86IR::  	ir_tag78_cmpend:
x86IR::  	pushl var_228
x86IR::  	call inject_bool
x86IR::  	movl eax var_227
x86IR::  	pushl var_227
x86IR::  	call tag
x86IR::  	movl eax var_232
x86IR::  	cmpl $0 var_232
x86IR::  	je ir_tag79_cmp
x86IR::  	movl $0 var_232
x86IR::  	jmp ir_tag79_cmpend
x86IR::  	ir_tag79_cmp:
x86IR::  	movl $1 var_232
x86IR::  	ir_tag79_cmpend:
x86IR::  	cmpl $0 var_232
x86IR::  	je ir_tag_else_80
x86IR::  	pushl var_227
x86IR::  	call project_int
x86IR::  	movl eax var_227
x86IR::  	jmp ir_tag_end_80
x86IR::  	ir_tag_else_80:
x86IR::  	pushl var_227
x86IR::  	call project_bool
x86IR::  	movl eax var_227
x86IR::  	jmp ir_tag_end_80
x86IR::  	ir_tag_end_80:
x86IR::  	cmpl $0 var_227
x86IR::  	je ir_tag_else_81
x86IR::  	pushl expl_11
x86IR::  	call print_any
x86IR::  	jmp ir_tag_end_81
x86IR::  	ir_tag_else_81:
x86IR::  	call call_error
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_226
x86IR::  	movl var_226 var_226
x86IR::  	movl var_226 var_226
x86IR::  	jmp ir_tag_end_81
x86IR::  	ir_tag_end_81:
x86IR::  	jmp ir_tag_end_77
x86IR::  	ir_tag_end_77:
x86IR::  	jmp ir_tag_end_73
x86IR::  	ir_tag_end_73:
x86IR::  	movl user_y expl_12
x86IR::  	pushl expl_12
x86IR::  	call tag
x86IR::  	movl eax var_265
x86IR::  	cmpl $0 var_265
x86IR::  	je ir_tag82_cmp
x86IR::  	movl $0 var_264
x86IR::  	jmp ir_tag82_cmpend
x86IR::  	ir_tag82_cmp:
x86IR::  	movl $1 var_264
x86IR::  	ir_tag82_cmpend:
x86IR::  	pushl var_264
x86IR::  	call inject_bool
x86IR::  	movl eax var_263
x86IR::  	pushl var_263
x86IR::  	call tag
x86IR::  	movl eax var_268
x86IR::  	cmpl $0 var_268
x86IR::  	je ir_tag83_cmp
x86IR::  	movl $0 var_268
x86IR::  	jmp ir_tag83_cmpend
x86IR::  	ir_tag83_cmp:
x86IR::  	movl $1 var_268
x86IR::  	ir_tag83_cmpend:
x86IR::  	cmpl $0 var_268
x86IR::  	je ir_tag_else_84
x86IR::  	pushl var_263
x86IR::  	call project_int
x86IR::  	movl eax var_263
x86IR::  	jmp ir_tag_end_84
x86IR::  	ir_tag_else_84:
x86IR::  	pushl var_263
x86IR::  	call project_bool
x86IR::  	movl eax var_263
x86IR::  	jmp ir_tag_end_84
x86IR::  	ir_tag_end_84:
x86IR::  	cmpl $0 var_263
x86IR::  	je ir_tag_else_85
x86IR::  	pushl expl_12
x86IR::  	call project_int
x86IR::  	movl eax var_247
x86IR::  	pushl var_247
x86IR::  	call print_int_nl
x86IR::  	jmp ir_tag_end_85
x86IR::  	ir_tag_else_85:
x86IR::  	pushl expl_12
x86IR::  	call tag
x86IR::  	movl eax var_258
x86IR::  	cmpl $1 var_258
x86IR::  	je ir_tag86_cmp
x86IR::  	movl $0 var_257
x86IR::  	jmp ir_tag86_cmpend
x86IR::  	ir_tag86_cmp:
x86IR::  	movl $1 var_257
x86IR::  	ir_tag86_cmpend:
x86IR::  	pushl var_257
x86IR::  	call inject_bool
x86IR::  	movl eax var_256
x86IR::  	pushl var_256
x86IR::  	call tag
x86IR::  	movl eax var_261
x86IR::  	cmpl $0 var_261
x86IR::  	je ir_tag87_cmp
x86IR::  	movl $0 var_261
x86IR::  	jmp ir_tag87_cmpend
x86IR::  	ir_tag87_cmp:
x86IR::  	movl $1 var_261
x86IR::  	ir_tag87_cmpend:
x86IR::  	cmpl $0 var_261
x86IR::  	je ir_tag_else_88
x86IR::  	pushl var_256
x86IR::  	call project_int
x86IR::  	movl eax var_256
x86IR::  	jmp ir_tag_end_88
x86IR::  	ir_tag_else_88:
x86IR::  	pushl var_256
x86IR::  	call project_bool
x86IR::  	movl eax var_256
x86IR::  	jmp ir_tag_end_88
x86IR::  	ir_tag_end_88:
x86IR::  	cmpl $0 var_256
x86IR::  	je ir_tag_else_89
x86IR::  	pushl expl_12
x86IR::  	call print_any
x86IR::  	jmp ir_tag_end_89
x86IR::  	ir_tag_else_89:
x86IR::  	pushl expl_12
x86IR::  	call tag
x86IR::  	movl eax var_251
x86IR::  	cmpl $3 var_251
x86IR::  	je ir_tag90_cmp
x86IR::  	movl $0 var_250
x86IR::  	jmp ir_tag90_cmpend
x86IR::  	ir_tag90_cmp:
x86IR::  	movl $1 var_250
x86IR::  	ir_tag90_cmpend:
x86IR::  	pushl var_250
x86IR::  	call inject_bool
x86IR::  	movl eax var_249
x86IR::  	pushl var_249
x86IR::  	call tag
x86IR::  	movl eax var_254
x86IR::  	cmpl $0 var_254
x86IR::  	je ir_tag91_cmp
x86IR::  	movl $0 var_254
x86IR::  	jmp ir_tag91_cmpend
x86IR::  	ir_tag91_cmp:
x86IR::  	movl $1 var_254
x86IR::  	ir_tag91_cmpend:
x86IR::  	cmpl $0 var_254
x86IR::  	je ir_tag_else_92
x86IR::  	pushl var_249
x86IR::  	call project_int
x86IR::  	movl eax var_249
x86IR::  	jmp ir_tag_end_92
x86IR::  	ir_tag_else_92:
x86IR::  	pushl var_249
x86IR::  	call project_bool
x86IR::  	movl eax var_249
x86IR::  	jmp ir_tag_end_92
x86IR::  	ir_tag_end_92:
x86IR::  	cmpl $0 var_249
x86IR::  	je ir_tag_else_93
x86IR::  	pushl expl_12
x86IR::  	call print_any
x86IR::  	jmp ir_tag_end_93
x86IR::  	ir_tag_else_93:
x86IR::  	call call_error
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_248
x86IR::  	movl var_248 var_248
x86IR::  	movl var_248 var_248
x86IR::  	jmp ir_tag_end_93
x86IR::  	ir_tag_end_93:
x86IR::  	jmp ir_tag_end_89
x86IR::  	ir_tag_end_89:
x86IR::  	jmp ir_tag_end_85
x86IR::  	ir_tag_end_85:
x86IR::  	movl user_z expl_13
x86IR::  	pushl expl_13
x86IR::  	call tag
x86IR::  	movl eax var_287
x86IR::  	cmpl $0 var_287
x86IR::  	je ir_tag94_cmp
x86IR::  	movl $0 var_286
x86IR::  	jmp ir_tag94_cmpend
x86IR::  	ir_tag94_cmp:
x86IR::  	movl $1 var_286
x86IR::  	ir_tag94_cmpend:
x86IR::  	pushl var_286
x86IR::  	call inject_bool
x86IR::  	movl eax var_285
x86IR::  	pushl var_285
x86IR::  	call tag
x86IR::  	movl eax var_290
x86IR::  	cmpl $0 var_290
x86IR::  	je ir_tag95_cmp
x86IR::  	movl $0 var_290
x86IR::  	jmp ir_tag95_cmpend
x86IR::  	ir_tag95_cmp:
x86IR::  	movl $1 var_290
x86IR::  	ir_tag95_cmpend:
x86IR::  	cmpl $0 var_290
x86IR::  	je ir_tag_else_96
x86IR::  	pushl var_285
x86IR::  	call project_int
x86IR::  	movl eax var_285
x86IR::  	jmp ir_tag_end_96
x86IR::  	ir_tag_else_96:
x86IR::  	pushl var_285
x86IR::  	call project_bool
x86IR::  	movl eax var_285
x86IR::  	jmp ir_tag_end_96
x86IR::  	ir_tag_end_96:
x86IR::  	cmpl $0 var_285
x86IR::  	je ir_tag_else_97
x86IR::  	pushl expl_13
x86IR::  	call project_int
x86IR::  	movl eax var_269
x86IR::  	pushl var_269
x86IR::  	call print_int_nl
x86IR::  	jmp ir_tag_end_97
x86IR::  	ir_tag_else_97:
x86IR::  	pushl expl_13
x86IR::  	call tag
x86IR::  	movl eax var_280
x86IR::  	cmpl $1 var_280
x86IR::  	je ir_tag98_cmp
x86IR::  	movl $0 var_279
x86IR::  	jmp ir_tag98_cmpend
x86IR::  	ir_tag98_cmp:
x86IR::  	movl $1 var_279
x86IR::  	ir_tag98_cmpend:
x86IR::  	pushl var_279
x86IR::  	call inject_bool
x86IR::  	movl eax var_278
x86IR::  	pushl var_278
x86IR::  	call tag
x86IR::  	movl eax var_283
x86IR::  	cmpl $0 var_283
x86IR::  	je ir_tag99_cmp
x86IR::  	movl $0 var_283
x86IR::  	jmp ir_tag99_cmpend
x86IR::  	ir_tag99_cmp:
x86IR::  	movl $1 var_283
x86IR::  	ir_tag99_cmpend:
x86IR::  	cmpl $0 var_283
x86IR::  	je ir_tag_else_100
x86IR::  	pushl var_278
x86IR::  	call project_int
x86IR::  	movl eax var_278
x86IR::  	jmp ir_tag_end_100
x86IR::  	ir_tag_else_100:
x86IR::  	pushl var_278
x86IR::  	call project_bool
x86IR::  	movl eax var_278
x86IR::  	jmp ir_tag_end_100
x86IR::  	ir_tag_end_100:
x86IR::  	cmpl $0 var_278
x86IR::  	je ir_tag_else_101
x86IR::  	pushl expl_13
x86IR::  	call print_any
x86IR::  	jmp ir_tag_end_101
x86IR::  	ir_tag_else_101:
x86IR::  	pushl expl_13
x86IR::  	call tag
x86IR::  	movl eax var_273
x86IR::  	cmpl $3 var_273
x86IR::  	je ir_tag102_cmp
x86IR::  	movl $0 var_272
x86IR::  	jmp ir_tag102_cmpend
x86IR::  	ir_tag102_cmp:
x86IR::  	movl $1 var_272
x86IR::  	ir_tag102_cmpend:
x86IR::  	pushl var_272
x86IR::  	call inject_bool
x86IR::  	movl eax var_271
x86IR::  	pushl var_271
x86IR::  	call tag
x86IR::  	movl eax var_276
x86IR::  	cmpl $0 var_276
x86IR::  	je ir_tag103_cmp
x86IR::  	movl $0 var_276
x86IR::  	jmp ir_tag103_cmpend
x86IR::  	ir_tag103_cmp:
x86IR::  	movl $1 var_276
x86IR::  	ir_tag103_cmpend:
x86IR::  	cmpl $0 var_276
x86IR::  	je ir_tag_else_104
x86IR::  	pushl var_271
x86IR::  	call project_int
x86IR::  	movl eax var_271
x86IR::  	jmp ir_tag_end_104
x86IR::  	ir_tag_else_104:
x86IR::  	pushl var_271
x86IR::  	call project_bool
x86IR::  	movl eax var_271
x86IR::  	jmp ir_tag_end_104
x86IR::  	ir_tag_end_104:
x86IR::  	cmpl $0 var_271
x86IR::  	je ir_tag_else_105
x86IR::  	pushl expl_13
x86IR::  	call print_any
x86IR::  	jmp ir_tag_end_105
x86IR::  	ir_tag_else_105:
x86IR::  	call call_error
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_270
x86IR::  	movl var_270 var_270
x86IR::  	movl var_270 var_270
x86IR::  	jmp ir_tag_end_105
x86IR::  	ir_tag_end_105:
x86IR::  	jmp ir_tag_end_101
x86IR::  	ir_tag_end_101:
x86IR::  	jmp ir_tag_end_97
x86IR::  	ir_tag_end_97:
VariableGraph::  # of variables: 197
