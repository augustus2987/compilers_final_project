compiler:: base tree:
compiler::	Printnl([Add((CallFunc(Name('input'), [], None, None), Const(1)))], None)
explicate:: Explicated Tree:
Module(None, Stmt([Let(Name('expl_3'), Let(Name('expl_1'), CallFunc(Name('input'), [], None, None), Let(Name('expl_2'), Const(1), IfExp(InjectFrom(bool, And([Or([Compare(Const(0), [('==', GetTag(Name('expl_1')))]), Compare(Const(1), [('==', GetTag(Name('expl_1')))])]), Or([Compare(Const(0), [('==', GetTag(Name('expl_2')))]), Compare(Const(1), [('==', GetTag(Name('expl_2')))])])])), Assign([Name('expl_0')], InjectFrom(int, Add((IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_1')))])), ProjectTo(int, Name('expl_1')), ProjectTo(bool, Name('expl_1'))), IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_2')))])), ProjectTo(int, Name('expl_2')), ProjectTo(bool, Name('expl_2'))))))), IfExp(InjectFrom(bool, And([Compare(Const(3), [('==', GetTag(Name('expl_1')))]), Compare(Const(3), [('==', GetTag(Name('expl_2')))])])), Assign([Name('expl_0')], InjectFrom(big, CallBigAdd(ProjectTo(big, Name('expl_1')), ProjectTo(big, Name('expl_2'))))), CallFunc(Name('call_error'), [], None, None))))), IfExp(InjectFrom(bool, Compare(Const(0), [('==', GetTag(Name('expl_3')))])), Printnl([ProjectTo(int, Name('expl_3'))], None), IfExp(InjectFrom(bool, Compare(Const(1), [('==', GetTag(Name('expl_3')))])), PrintBool(Name('expl_3')), IfExp(InjectFrom(bool, Compare(Const(3), [('==', GetTag(Name('expl_3')))])), PrintBig(Name('expl_3')), CallFunc(Name('call_error'), [], None, None)))))]))
Flatten:: Flattened AST tree:
Flatten:: 	Assign([AssName('var_0', 'OP-ASSIGN')], CallFunc(Name('input'), [], None, None))
Flatten:: 	Let(Name('expl_1'), Name('var_0'), Stmt([Let(Name('expl_2'), Const(1), Stmt([Assign([AssName('var_48', 'OP-ASSIGN')], GetTag(Name('expl_1'))), Assign([AssName('var_47', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_48'))])), Assign([AssName('var_51', 'OP-ASSIGN')], GetTag(Name('expl_1'))), Assign([AssName('var_50', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_51'))])), Assign([AssName('var_46', 'OP-ASSIGN')], Or([Name('var_47'), Name('var_50')])), Assign([AssName('var_56', 'OP-ASSIGN')], GetTag(Name('expl_2'))), Assign([AssName('var_55', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_56'))])), Assign([AssName('var_59', 'OP-ASSIGN')], GetTag(Name('expl_2'))), Assign([AssName('var_58', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_59'))])), Assign([AssName('var_54', 'OP-ASSIGN')], Or([Name('var_55'), Name('var_58')])), Assign([AssName('var_45', 'OP-ASSIGN')], And([Name('var_46'), Name('var_54')])), Assign([AssName('var_44', 'OP-ASSIGN')], InjectFrom(bool, Name('var_45'))), Assign([AssName('var_64', 'OP-ASSIGN')], GetTag(Name('var_44'))), Assign([AssName('var_64', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_64'))])), IfExp(Name('var_64'), Stmt([Assign([AssName('var_44', 'OP-ASSIGN')], ProjectTo(int, Name('var_44')))]), Stmt([Assign([AssName('var_44', 'OP-ASSIGN')], ProjectTo(bool, Name('var_44')))])), IfExp(Name('var_44'), Stmt([Assign([AssName('var_8', 'OP-ASSIGN')], GetTag(Name('expl_1'))), Assign([AssName('var_7', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_8'))])), Assign([AssName('var_6', 'OP-ASSIGN')], InjectFrom(bool, Name('var_7'))), Assign([AssName('var_11', 'OP-ASSIGN')], GetTag(Name('var_6'))), Assign([AssName('var_11', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_11'))])), IfExp(Name('var_11'), Stmt([Assign([AssName('var_6', 'OP-ASSIGN')], ProjectTo(int, Name('var_6')))]), Stmt([Assign([AssName('var_6', 'OP-ASSIGN')], ProjectTo(bool, Name('var_6')))])), IfExp(Name('var_6'), Stmt([Assign([AssName('var_3', 'OP-ASSIGN')], ProjectTo(int, Name('expl_1'))), Assign([AssName('var_3', 'OP-ASSIGN')], Name('var_3'))]), Stmt([Assign([AssName('var_4', 'OP-ASSIGN')], ProjectTo(bool, Name('expl_1'))), Assign([AssName('var_3', 'OP-ASSIGN')], Name('var_4'))])), Assign([AssName('var_18', 'OP-ASSIGN')], GetTag(Name('expl_2'))), Assign([AssName('var_17', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_18'))])), Assign([AssName('var_16', 'OP-ASSIGN')], InjectFrom(bool, Name('var_17'))), Assign([AssName('var_21', 'OP-ASSIGN')], GetTag(Name('var_16'))), Assign([AssName('var_21', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_21'))])), IfExp(Name('var_21'), Stmt([Assign([AssName('var_16', 'OP-ASSIGN')], ProjectTo(int, Name('var_16')))]), Stmt([Assign([AssName('var_16', 'OP-ASSIGN')], ProjectTo(bool, Name('var_16')))])), IfExp(Name('var_16'), Stmt([Assign([AssName('var_13', 'OP-ASSIGN')], ProjectTo(int, Name('expl_2'))), Assign([AssName('var_13', 'OP-ASSIGN')], Name('var_13'))]), Stmt([Assign([AssName('var_14', 'OP-ASSIGN')], ProjectTo(bool, Name('expl_2'))), Assign([AssName('var_13', 'OP-ASSIGN')], Name('var_14'))])), Assign([AssName('var_2', 'OP-ASSIGN')], Add((Name('var_3'), Name('var_13')))), Assign([AssName('var_1', 'OP-ASSIGN')], InjectFrom(int, Name('var_2'))), Assign([Name('expl_0')], Name('var_1')), Assign([AssName('var_1', 'OP-ASSIGN')], Name('expl_0'))]), Stmt([Assign([AssName('var_35', 'OP-ASSIGN')], GetTag(Name('expl_1'))), Assign([AssName('var_34', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_35'))])), Assign([AssName('var_38', 'OP-ASSIGN')], GetTag(Name('expl_2'))), Assign([AssName('var_37', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_38'))])), Assign([AssName('var_33', 'OP-ASSIGN')], And([Name('var_34'), Name('var_37')])), Assign([AssName('var_32', 'OP-ASSIGN')], InjectFrom(bool, Name('var_33'))), Assign([AssName('var_42', 'OP-ASSIGN')], GetTag(Name('var_32'))), Assign([AssName('var_42', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_42'))])), IfExp(Name('var_42'), Stmt([Assign([AssName('var_32', 'OP-ASSIGN')], ProjectTo(int, Name('var_32')))]), Stmt([Assign([AssName('var_32', 'OP-ASSIGN')], ProjectTo(bool, Name('var_32')))])), IfExp(Name('var_32'), Stmt([Assign([AssName('var_26', 'OP-ASSIGN')], ProjectTo(big, Name('expl_1'))), Assign([AssName('var_28', 'OP-ASSIGN')], ProjectTo(big, Name('expl_2'))), Assign([AssName('var_25', 'OP-ASSIGN')], CallBigAdd(Name('var_26'), Name('var_28'))), Assign([AssName('var_24', 'OP-ASSIGN')], InjectFrom(big, Name('var_25'))), Assign([Name('expl_0')], Name('var_24')), Assign([AssName('var_24', 'OP-ASSIGN')], Name('expl_0')), Assign([AssName('var_1', 'OP-ASSIGN')], Name('var_24'))]), Stmt([Assign([AssName('var_31', 'OP-ASSIGN')], CallFunc(Name('call_error'), [], None, None)), Assign([AssName('var_24', 'OP-ASSIGN')], Name('var_31')), Assign([AssName('var_1', 'OP-ASSIGN')], Name('var_24'))]))]))])), Assign([AssName('var_1', 'OP-ASSIGN')], Name('expl_0'))]))
Flatten:: 	Assign([AssName('var_0', 'OP-ASSIGN')], Name('expl_0'))
Flatten:: 	Let(Name('expl_3'), Name('var_0'), Stmt([Assign([AssName('var_84', 'OP-ASSIGN')], GetTag(Name('expl_3'))), Assign([AssName('var_83', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_84'))])), Assign([AssName('var_82', 'OP-ASSIGN')], InjectFrom(bool, Name('var_83'))), Assign([AssName('var_87', 'OP-ASSIGN')], GetTag(Name('var_82'))), Assign([AssName('var_87', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_87'))])), IfExp(Name('var_87'), Stmt([Assign([AssName('var_82', 'OP-ASSIGN')], ProjectTo(int, Name('var_82')))]), Stmt([Assign([AssName('var_82', 'OP-ASSIGN')], ProjectTo(bool, Name('var_82')))])), IfExp(Name('var_82'), Stmt([Assign([AssName('var_66', 'OP-ASSIGN')], ProjectTo(int, Name('expl_3'))), Printnl([Name('var_66')], None)]), Stmt([Assign([AssName('var_77', 'OP-ASSIGN')], GetTag(Name('expl_3'))), Assign([AssName('var_76', 'OP-ASSIGN')], Compare(Const(1), [('==', Name('var_77'))])), Assign([AssName('var_75', 'OP-ASSIGN')], InjectFrom(bool, Name('var_76'))), Assign([AssName('var_80', 'OP-ASSIGN')], GetTag(Name('var_75'))), Assign([AssName('var_80', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_80'))])), IfExp(Name('var_80'), Stmt([Assign([AssName('var_75', 'OP-ASSIGN')], ProjectTo(int, Name('var_75')))]), Stmt([Assign([AssName('var_75', 'OP-ASSIGN')], ProjectTo(bool, Name('var_75')))])), IfExp(Name('var_75'), Stmt([PrintBool(Name('expl_3'))]), Stmt([Assign([AssName('var_70', 'OP-ASSIGN')], GetTag(Name('expl_3'))), Assign([AssName('var_69', 'OP-ASSIGN')], Compare(Const(3), [('==', Name('var_70'))])), Assign([AssName('var_68', 'OP-ASSIGN')], InjectFrom(bool, Name('var_69'))), Assign([AssName('var_73', 'OP-ASSIGN')], GetTag(Name('var_68'))), Assign([AssName('var_73', 'OP-ASSIGN')], Compare(Const(0), [('==', Name('var_73'))])), IfExp(Name('var_73'), Stmt([Assign([AssName('var_68', 'OP-ASSIGN')], ProjectTo(int, Name('var_68')))]), Stmt([Assign([AssName('var_68', 'OP-ASSIGN')], ProjectTo(bool, Name('var_68')))])), IfExp(Name('var_68'), Stmt([PrintBig(Name('expl_3'))]), Stmt([Assign([AssName('var_67', 'OP-ASSIGN')], CallFunc(Name('call_error'), [], None, None)), Assign([AssName('var_67', 'OP-ASSIGN')], Name('var_67')), Assign([AssName('var_67', 'OP-ASSIGN')], Name('var_67'))]))]))]))]))
x86IR::  Intermediate representation:
x86IR::  	call input
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_0
x86IR::  	movl var_0 expl_1
x86IR::  	pushl $1
x86IR::  	call inject_int
x86IR::  	movl eax expl_2
x86IR::  	pushl expl_1
x86IR::  	call tag
x86IR::  	movl eax var_48
x86IR::  	cmpl $0 var_48
x86IR::  	je ir_tag0_cmp
x86IR::  	movl $0 var_47
x86IR::  	jmp ir_tag0_cmpend
x86IR::  	ir_tag0_cmp:
x86IR::  	movl $1 var_47
x86IR::  	ir_tag0_cmpend:
x86IR::  	pushl expl_1
x86IR::  	call tag
x86IR::  	movl eax var_51
x86IR::  	cmpl $1 var_51
x86IR::  	je ir_tag1_cmp
x86IR::  	movl $0 var_50
x86IR::  	jmp ir_tag1_cmpend
x86IR::  	ir_tag1_cmp:
x86IR::  	movl $1 var_50
x86IR::  	ir_tag1_cmpend:
x86IR::  	movl var_47 var_46
x86IR::  	orl var_50 var_46
x86IR::  	pushl expl_2
x86IR::  	call tag
x86IR::  	movl eax var_56
x86IR::  	cmpl $0 var_56
x86IR::  	je ir_tag2_cmp
x86IR::  	movl $0 var_55
x86IR::  	jmp ir_tag2_cmpend
x86IR::  	ir_tag2_cmp:
x86IR::  	movl $1 var_55
x86IR::  	ir_tag2_cmpend:
x86IR::  	pushl expl_2
x86IR::  	call tag
x86IR::  	movl eax var_59
x86IR::  	cmpl $1 var_59
x86IR::  	je ir_tag3_cmp
x86IR::  	movl $0 var_58
x86IR::  	jmp ir_tag3_cmpend
x86IR::  	ir_tag3_cmp:
x86IR::  	movl $1 var_58
x86IR::  	ir_tag3_cmpend:
x86IR::  	movl var_55 var_54
x86IR::  	orl var_58 var_54
x86IR::  	movl var_46 var_45
x86IR::  	andl var_54 var_45
x86IR::  	pushl var_45
x86IR::  	call inject_bool
x86IR::  	movl eax var_44
x86IR::  	pushl var_44
x86IR::  	call tag
x86IR::  	movl eax var_64
x86IR::  	cmpl $0 var_64
x86IR::  	je ir_tag4_cmp
x86IR::  	movl $0 var_64
x86IR::  	jmp ir_tag4_cmpend
x86IR::  	ir_tag4_cmp:
x86IR::  	movl $1 var_64
x86IR::  	ir_tag4_cmpend:
x86IR::  	cmpl $0 var_64
x86IR::  	je ir_tag_else_5
x86IR::  	pushl var_44
x86IR::  	call project_int
x86IR::  	movl eax var_44
x86IR::  	jmp ir_tag_end_5
x86IR::  	ir_tag_else_5:
x86IR::  	pushl var_44
x86IR::  	call project_bool
x86IR::  	movl eax var_44
x86IR::  	jmp ir_tag_end_5
x86IR::  	ir_tag_end_5:
x86IR::  	cmpl $0 var_44
x86IR::  	je ir_tag_else_6
x86IR::  	pushl expl_1
x86IR::  	call tag
x86IR::  	movl eax var_8
x86IR::  	cmpl $0 var_8
x86IR::  	je ir_tag7_cmp
x86IR::  	movl $0 var_7
x86IR::  	jmp ir_tag7_cmpend
x86IR::  	ir_tag7_cmp:
x86IR::  	movl $1 var_7
x86IR::  	ir_tag7_cmpend:
x86IR::  	pushl var_7
x86IR::  	call inject_bool
x86IR::  	movl eax var_6
x86IR::  	pushl var_6
x86IR::  	call tag
x86IR::  	movl eax var_11
x86IR::  	cmpl $0 var_11
x86IR::  	je ir_tag8_cmp
x86IR::  	movl $0 var_11
x86IR::  	jmp ir_tag8_cmpend
x86IR::  	ir_tag8_cmp:
x86IR::  	movl $1 var_11
x86IR::  	ir_tag8_cmpend:
x86IR::  	cmpl $0 var_11
x86IR::  	je ir_tag_else_9
x86IR::  	pushl var_6
x86IR::  	call project_int
x86IR::  	movl eax var_6
x86IR::  	jmp ir_tag_end_9
x86IR::  	ir_tag_else_9:
x86IR::  	pushl var_6
x86IR::  	call project_bool
x86IR::  	movl eax var_6
x86IR::  	jmp ir_tag_end_9
x86IR::  	ir_tag_end_9:
x86IR::  	cmpl $0 var_6
x86IR::  	je ir_tag_else_10
x86IR::  	pushl expl_1
x86IR::  	call project_int
x86IR::  	movl eax var_3
x86IR::  	movl var_3 var_3
x86IR::  	jmp ir_tag_end_10
x86IR::  	ir_tag_else_10:
x86IR::  	pushl expl_1
x86IR::  	call project_bool
x86IR::  	movl eax var_4
x86IR::  	movl var_4 var_3
x86IR::  	jmp ir_tag_end_10
x86IR::  	ir_tag_end_10:
x86IR::  	pushl expl_2
x86IR::  	call tag
x86IR::  	movl eax var_18
x86IR::  	cmpl $0 var_18
x86IR::  	je ir_tag11_cmp
x86IR::  	movl $0 var_17
x86IR::  	jmp ir_tag11_cmpend
x86IR::  	ir_tag11_cmp:
x86IR::  	movl $1 var_17
x86IR::  	ir_tag11_cmpend:
x86IR::  	pushl var_17
x86IR::  	call inject_bool
x86IR::  	movl eax var_16
x86IR::  	pushl var_16
x86IR::  	call tag
x86IR::  	movl eax var_21
x86IR::  	cmpl $0 var_21
x86IR::  	je ir_tag12_cmp
x86IR::  	movl $0 var_21
x86IR::  	jmp ir_tag12_cmpend
x86IR::  	ir_tag12_cmp:
x86IR::  	movl $1 var_21
x86IR::  	ir_tag12_cmpend:
x86IR::  	cmpl $0 var_21
x86IR::  	je ir_tag_else_13
x86IR::  	pushl var_16
x86IR::  	call project_int
x86IR::  	movl eax var_16
x86IR::  	jmp ir_tag_end_13
x86IR::  	ir_tag_else_13:
x86IR::  	pushl var_16
x86IR::  	call project_bool
x86IR::  	movl eax var_16
x86IR::  	jmp ir_tag_end_13
x86IR::  	ir_tag_end_13:
x86IR::  	cmpl $0 var_16
x86IR::  	je ir_tag_else_14
x86IR::  	pushl expl_2
x86IR::  	call project_int
x86IR::  	movl eax var_13
x86IR::  	movl var_13 var_13
x86IR::  	jmp ir_tag_end_14
x86IR::  	ir_tag_else_14:
x86IR::  	pushl expl_2
x86IR::  	call project_bool
x86IR::  	movl eax var_14
x86IR::  	movl var_14 var_13
x86IR::  	jmp ir_tag_end_14
x86IR::  	ir_tag_end_14:
x86IR::  	movl var_3 var_2
x86IR::  	addl var_13 var_2
x86IR::  	pushl var_2
x86IR::  	call inject_int
x86IR::  	movl eax var_1
x86IR::  	movl var_1 expl_0
x86IR::  	movl expl_0 var_1
x86IR::  	jmp ir_tag_end_6
x86IR::  	ir_tag_else_6:
x86IR::  	pushl expl_1
x86IR::  	call tag
x86IR::  	movl eax var_35
x86IR::  	cmpl $3 var_35
x86IR::  	je ir_tag15_cmp
x86IR::  	movl $0 var_34
x86IR::  	jmp ir_tag15_cmpend
x86IR::  	ir_tag15_cmp:
x86IR::  	movl $1 var_34
x86IR::  	ir_tag15_cmpend:
x86IR::  	pushl expl_2
x86IR::  	call tag
x86IR::  	movl eax var_38
x86IR::  	cmpl $3 var_38
x86IR::  	je ir_tag16_cmp
x86IR::  	movl $0 var_37
x86IR::  	jmp ir_tag16_cmpend
x86IR::  	ir_tag16_cmp:
x86IR::  	movl $1 var_37
x86IR::  	ir_tag16_cmpend:
x86IR::  	movl var_34 var_33
x86IR::  	andl var_37 var_33
x86IR::  	pushl var_33
x86IR::  	call inject_bool
x86IR::  	movl eax var_32
x86IR::  	pushl var_32
x86IR::  	call tag
x86IR::  	movl eax var_42
x86IR::  	cmpl $0 var_42
x86IR::  	je ir_tag17_cmp
x86IR::  	movl $0 var_42
x86IR::  	jmp ir_tag17_cmpend
x86IR::  	ir_tag17_cmp:
x86IR::  	movl $1 var_42
x86IR::  	ir_tag17_cmpend:
x86IR::  	cmpl $0 var_42
x86IR::  	je ir_tag_else_18
x86IR::  	pushl var_32
x86IR::  	call project_int
x86IR::  	movl eax var_32
x86IR::  	jmp ir_tag_end_18
x86IR::  	ir_tag_else_18:
x86IR::  	pushl var_32
x86IR::  	call project_bool
x86IR::  	movl eax var_32
x86IR::  	jmp ir_tag_end_18
x86IR::  	ir_tag_end_18:
x86IR::  	cmpl $0 var_32
x86IR::  	je ir_tag_else_19
x86IR::  	pushl expl_1
x86IR::  	call project_big
x86IR::  	movl eax var_26
x86IR::  	pushl expl_2
x86IR::  	call project_big
x86IR::  	movl eax var_28
x86IR::  	pushl var_28
x86IR::  	pushl var_26
x86IR::  	call add
x86IR::  	movl eax var_25
x86IR::  	pushl var_25
x86IR::  	call inject_big
x86IR::  	movl eax var_24
x86IR::  	movl var_24 expl_0
x86IR::  	movl expl_0 var_24
x86IR::  	movl var_24 var_1
x86IR::  	jmp ir_tag_end_19
x86IR::  	ir_tag_else_19:
x86IR::  	call call_error
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_31
x86IR::  	movl var_31 var_24
x86IR::  	movl var_24 var_1
x86IR::  	jmp ir_tag_end_19
x86IR::  	ir_tag_end_19:
x86IR::  	jmp ir_tag_end_6
x86IR::  	ir_tag_end_6:
x86IR::  	movl expl_0 var_1
x86IR::  	movl expl_0 var_0
x86IR::  	movl var_0 expl_3
x86IR::  	pushl expl_3
x86IR::  	call tag
x86IR::  	movl eax var_84
x86IR::  	cmpl $0 var_84
x86IR::  	je ir_tag20_cmp
x86IR::  	movl $0 var_83
x86IR::  	jmp ir_tag20_cmpend
x86IR::  	ir_tag20_cmp:
x86IR::  	movl $1 var_83
x86IR::  	ir_tag20_cmpend:
x86IR::  	pushl var_83
x86IR::  	call inject_bool
x86IR::  	movl eax var_82
x86IR::  	pushl var_82
x86IR::  	call tag
x86IR::  	movl eax var_87
x86IR::  	cmpl $0 var_87
x86IR::  	je ir_tag21_cmp
x86IR::  	movl $0 var_87
x86IR::  	jmp ir_tag21_cmpend
x86IR::  	ir_tag21_cmp:
x86IR::  	movl $1 var_87
x86IR::  	ir_tag21_cmpend:
x86IR::  	cmpl $0 var_87
x86IR::  	je ir_tag_else_22
x86IR::  	pushl var_82
x86IR::  	call project_int
x86IR::  	movl eax var_82
x86IR::  	jmp ir_tag_end_22
x86IR::  	ir_tag_else_22:
x86IR::  	pushl var_82
x86IR::  	call project_bool
x86IR::  	movl eax var_82
x86IR::  	jmp ir_tag_end_22
x86IR::  	ir_tag_end_22:
x86IR::  	cmpl $0 var_82
x86IR::  	je ir_tag_else_23
x86IR::  	pushl expl_3
x86IR::  	call project_int
x86IR::  	movl eax var_66
x86IR::  	pushl var_66
x86IR::  	call print_int_nl
x86IR::  	jmp ir_tag_end_23
x86IR::  	ir_tag_else_23:
x86IR::  	pushl expl_3
x86IR::  	call tag
x86IR::  	movl eax var_77
x86IR::  	cmpl $1 var_77
x86IR::  	je ir_tag24_cmp
x86IR::  	movl $0 var_76
x86IR::  	jmp ir_tag24_cmpend
x86IR::  	ir_tag24_cmp:
x86IR::  	movl $1 var_76
x86IR::  	ir_tag24_cmpend:
x86IR::  	pushl var_76
x86IR::  	call inject_bool
x86IR::  	movl eax var_75
x86IR::  	pushl var_75
x86IR::  	call tag
x86IR::  	movl eax var_80
x86IR::  	cmpl $0 var_80
x86IR::  	je ir_tag25_cmp
x86IR::  	movl $0 var_80
x86IR::  	jmp ir_tag25_cmpend
x86IR::  	ir_tag25_cmp:
x86IR::  	movl $1 var_80
x86IR::  	ir_tag25_cmpend:
x86IR::  	cmpl $0 var_80
x86IR::  	je ir_tag_else_26
x86IR::  	pushl var_75
x86IR::  	call project_int
x86IR::  	movl eax var_75
x86IR::  	jmp ir_tag_end_26
x86IR::  	ir_tag_else_26:
x86IR::  	pushl var_75
x86IR::  	call project_bool
x86IR::  	movl eax var_75
x86IR::  	jmp ir_tag_end_26
x86IR::  	ir_tag_end_26:
x86IR::  	cmpl $0 var_75
x86IR::  	je ir_tag_else_27
x86IR::  	pushl expl_3
x86IR::  	call print_any
x86IR::  	jmp ir_tag_end_27
x86IR::  	ir_tag_else_27:
x86IR::  	pushl expl_3
x86IR::  	call tag
x86IR::  	movl eax var_70
x86IR::  	cmpl $3 var_70
x86IR::  	je ir_tag28_cmp
x86IR::  	movl $0 var_69
x86IR::  	jmp ir_tag28_cmpend
x86IR::  	ir_tag28_cmp:
x86IR::  	movl $1 var_69
x86IR::  	ir_tag28_cmpend:
x86IR::  	pushl var_69
x86IR::  	call inject_bool
x86IR::  	movl eax var_68
x86IR::  	pushl var_68
x86IR::  	call tag
x86IR::  	movl eax var_73
x86IR::  	cmpl $0 var_73
x86IR::  	je ir_tag29_cmp
x86IR::  	movl $0 var_73
x86IR::  	jmp ir_tag29_cmpend
x86IR::  	ir_tag29_cmp:
x86IR::  	movl $1 var_73
x86IR::  	ir_tag29_cmpend:
x86IR::  	cmpl $0 var_73
x86IR::  	je ir_tag_else_30
x86IR::  	pushl var_68
x86IR::  	call project_int
x86IR::  	movl eax var_68
x86IR::  	jmp ir_tag_end_30
x86IR::  	ir_tag_else_30:
x86IR::  	pushl var_68
x86IR::  	call project_bool
x86IR::  	movl eax var_68
x86IR::  	jmp ir_tag_end_30
x86IR::  	ir_tag_end_30:
x86IR::  	cmpl $0 var_68
x86IR::  	je ir_tag_else_31
x86IR::  	pushl expl_3
x86IR::  	call print_any
x86IR::  	jmp ir_tag_end_31
x86IR::  	ir_tag_else_31:
x86IR::  	call call_error
x86IR::  	pushl eax
x86IR::  	call inject_int
x86IR::  	movl eax var_67
x86IR::  	movl var_67 var_67
x86IR::  	movl var_67 var_67
x86IR::  	jmp ir_tag_end_31
x86IR::  	ir_tag_end_31:
x86IR::  	jmp ir_tag_end_27
x86IR::  	ir_tag_end_27:
x86IR::  	jmp ir_tag_end_23
x86IR::  	ir_tag_end_23:
VariableGraph::  # of variables: 59
